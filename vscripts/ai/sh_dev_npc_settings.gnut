global function SetupChangeSurvivalCharacterClass
global function SetupOverrideSpawnSurvivalCharacter
global function SetupSurvival
global function SetupModelSpawner
global function SetupSurvivalLoot
global function SetupSurvivalIncapShieldBot
global function SetupAbilities
global function SetupWeapons
global function SetupEditor

void function SetupChangeSurvivalCharacterClass()
{
// TODO: FIX [Undefined variable "SetupDevFunc"]
	#if UI
		array<ItemFlavor> characters = clone GetAllCharacters()
		characters.sort( int function( ItemFlavor a, ItemFlavor b ) {
			if ( Localize( ItemFlavor_GetLongName( a ) ) < Localize( ItemFlavor_GetLongName( b ) ) )
				return -1
			if ( Localize( ItemFlavor_GetLongName( a ) ) > Localize( ItemFlavor_GetLongName( b ) ) )
				return 1
			return 0
		} )
		foreach( ItemFlavor character in characters )
		{
			SetupDevFunc( Localize( ItemFlavor_GetLongName( character ) ), void function( var unused ) : ( character ) {
				DEV_RequestSetItemFlavorLoadoutSlot( LocalClientEHI(), Loadout_CharacterClass(), character )
			} )
		}
	#endif
}

void function SetupOverrideSpawnSurvivalCharacter()
{
	#if(UI)
		SetupDevCommand( "Random (default)", "dev_sur_force_spawn_character random" )
		SetupDevCommand( "Shipping only", "dev_sur_force_spawn_character special" )
		array<ItemFlavor> characters = clone GetAllCharacters()
		characters.sort( int function( ItemFlavor a, ItemFlavor b ) {
			if ( Localize( ItemFlavor_GetLongName( a ) ) < Localize( ItemFlavor_GetLongName( b ) ) )
				return -1
			if ( Localize( ItemFlavor_GetLongName( a ) ) > Localize( ItemFlavor_GetLongName( b ) ) )
				return 1
			return 0
		} )
		foreach( ItemFlavor characterClass in characters )
		{
			SetupDevCommand( Localize( ItemFlavor_GetLongName( characterClass ) ), "dev_sur_force_spawn_character " + ItemFlavor_GetHumanReadableRef( characterClass ) )
		}
	#endif
}

void function SetupWeapons()
{
	#if UI
	// Rifles
	SetupDevCommand( "Rifle: Flatline", "give mp_weapon_vinson" )
	SetupDevCommand( "Rifle: G7 Scout", "give mp_weapon_g2" )
	SetupDevCommand( "Rifle: Havoc", "give mp_weapon_energy_ar" )
	SetupDevCommand( "Rifle: Hemlok", "give mp_weapon_hemlok" )
	SetupDevCommand( "Rifle: R-301", "give mp_weapon_rspn101" )
	

	// SMGs
	SetupDevCommand( "SMG: Alternator", "give mp_weapon_alternator_smg" )
	SetupDevCommand( "SMG: Prowler", "give mp_weapon_pdw" )
	SetupDevCommand( "SMG: R-99", "give mp_weapon_r97" )
	SetupDevCommand( "SMG: Volt SMG", "give mp_weapon_volt_smg" )

	// LMGs
	SetupDevCommand( "LMG: Devotion", "give mp_weapon_esaw" )
	SetupDevCommand( "LMG: L-Star", "give mp_weapon_lstar" )
	SetupDevCommand( "LMG: Spitfire", "give mp_weapon_lmg" )

	// Snipers
	SetupDevCommand( "Sniper: Charge Rifle", "give mp_weapon_defender" )
	SetupDevCommand( "Sniper: Kraber", "give mp_weapon_sniper" )
	SetupDevCommand( "Sniper: Longbow", "give mp_weapon_dmr" )
	SetupDevCommand( "Sniper: Triple Take", "give mp_weapon_doubletake" )
	SetupDevCommand( "Sniper: Sentinel", "give mp_weapon_sentinel" )

	// Shotguns
	SetupDevCommand( "Shotgun: EVA-8 Auto", "give mp_weapon_shotgun" )
	SetupDevCommand( "Shotgun: Mastiff", "give mp_weapon_mastiff" )
	SetupDevCommand( "Shotgun: Mozambique", "give mp_weapon_shotgun_pistol" )
	SetupDevCommand( "Shotgun: Peacekeeper", "give mp_weapon_energy_shotgun" )

	// Pistols
	SetupDevCommand( "Pistol: P2020", "give mp_weapon_semipistol" )
	SetupDevCommand( "Pistol: RE-45", "give mp_weapon_autopistol" )
	SetupDevCommand( "Pistol: Wingman", "give mp_weapon_wingman" )

	// Grenades
	SetupDevCommand( "Grenade: Arc Star", "give mp_weapon_grenade_emp" )
	SetupDevCommand( "Grenade: Frag", "give mp_weapon_frag_grenade" )
	SetupDevCommand( "Grenade: Thermite", "give mp_weapon_thermite_grenade" )

	// Dev
	//SetupDevCommand( "Dev: Dev Tool", "give mp_weapon_mdlspawner" )
	//SetupDevCommand( "Dev: Smart Pistol (disabled)", "give mp_weapon_smart_pistol" )
	SetupDevCommand( "Dev: Dev Cubemap ", "give weapon_cubemap" )
	SetupDevCommand( "Dev: Car SMG", "give mp_weapon_car" )
	SetupDevCommand( "Dev: Rampage LMG", "give mp_weapon_dragon_lmg" )
	SetupDevCommand( "Dev: Throwing Knife", "give mp_weapon_throwingknife" )
	
	#endif
}

void function SetupSurvival()
{
	#if UI
		SetupDevCommand( "Toggle Training Completed", "script GP().SetPersistentVar( \"trainingCompleted\", (GP().GetPersistentVarAsInt( \"trainingCompleted\" ) == 0 ? 1 : 0) )" )
		SetupDevCommand( "Enable Survival Dev Mode", "playlist survival_dev" )
		SetupDevCommand( "Disable Match Ending", "mp_enablematchending 0" )
		SetupDevCommand( "Drop Care Package R1", "script thread AirdropForRound( gp()[0].GetOrigin(), gp()[0].GetAngles(), 0, null )" )
		SetupDevCommand( "Drop Care Package R2", "script thread AirdropForRound( gp()[0].GetOrigin(), gp()[0].GetAngles(), 1, null )" )
		SetupDevCommand( "Drop Care Package R3", "script thread AirdropForRound( gp()[0].GetOrigin(), gp()[0].GetAngles(), 2, null )" )
		SetupDevCommand( "Force Circle Movement", "script FlagWait( \"DeathCircleActive\" );script svGlobal.levelEnt.Signal( \"DeathField_ShrinkNow\" );script FlagClear( \"DeathFieldPaused\" )" )
		SetupDevCommand( "Pause Circle Movement", "script FlagSet( \"DeathFieldPaused\" )" )
		SetupDevCommand( "Unpause Circle Movement", "script FlagClear( \"DeathFieldPaused\" )" )
		SetupDevCommand( "Gladiator Intro Sequence", "script thread DEV_StartGladiatorIntroSequence()" )
		SetupDevCommand( "Bleedout Debug Mode", "script FlagSet( \"BleedoutDebug\" )" )
		SetupDevCommand( "Disable Loot Drops on Death", "script FlagSet( \"DisableLootDrops\" )" )
		SetupDevCommand( "Drop My Death Box", "script thread SURVIVAL_Death_DropLoot_Internal( gp(), null, 100 )" )
	#endif
}


void function SetupSurvivalLoot( var categories )
{
	#if UI
		RunClientScript( "SetupSurvivalLoot", categories )
	#endif
}

void function SetupAbilities()
{
	#if UI
	SetupDevCommand( "Bangalore Tactical", "give mp_weapon_grenade_bangalore" )
	SetupDevCommand( "Bangalore Ultimate", "give mp_weapon_grenade_creeping_bombardment" )
	SetupDevCommand( "Bloodhound Tactical", "give mp_ability_area_sonar_scan" )
	SetupDevCommand( "Bloodhound Ultimate", "give mp_ability_hunt_mode" )
	SetupDevCommand( "Caustic Tactical", "give mp_weapon_dirty_bomb" )
	SetupDevCommand( "Caustic Ultimate", "give mp_weapon_grenade_gas" )
	SetupDevCommand( "Crypto Tactical", "give mp_ability_crypto_drone" )
	SetupDevCommand( "Crypto Ultimate", "give mp_ability_crypto_drone_emp" )
	SetupDevCommand( "Gibraltar Tactical", "give mp_weapon_bubble_bunker" )
	SetupDevCommand( "Gibraltar Ultimate", "give mp_weapon_grenade_defensive_bombardment" )
	SetupDevCommand( "Lifeline Tactical", "give mp_weapon_deployable_medic" )
	SetupDevCommand( "Lifeline Ultimate", "give mp_ability_care_package" )
	SetupDevCommand( "Mirage Tactical", "give mp_ability_holopilot" )
	SetupDevCommand( "Mirage Ultimate", "give mp_ability_mirage_ultimate" )
	SetupDevCommand( " ", "give mp_ability_heal" ) // blank line so Octance is in the same column
	SetupDevCommand( "Octane Tactical", "give mp_ability_heal" )
	SetupDevCommand( "Octane Ultimate", "give mp_weapon_jump_pad" )
	SetupDevCommand( "Pathfinder Tactical", "give mp_ability_grapple" )
	SetupDevCommand( "Pathfinder Ultimate", "give mp_weapon_zipline" )
	SetupDevCommand( "Wattson Tactical", "give mp_weapon_tesla_trap" )
	SetupDevCommand( "Wattson Ultimate", "give mp_weapon_trophy_defense_system"  )
	SetupDevCommand( "Wraith Tactical", "give mp_ability_phase_walk" )
	SetupDevCommand( "Wraith Ultimate", "give mp_weapon_phase_tunnel" )
	
	SetupDevCommand( "Tf2: Pulse Blade", "give mp_weapon_grenade_sonar" )
	SetupDevCommand( "Tf2: Amped Wall", "give mp_weapon_deployable_cover" )
	SetupDevCommand( "Tf2: Electric Smoke", "give mp_weapon_grenade_electric_smoke" )
	
	SetupDevCommand( "Dev: 3Dash", "give mp_ability_3dash" )
	SetupDevCommand( "Dev: Cloak", "give mp_ability_cloak" )
	SetupDevCommand( "Dev: Gravity Lift", "give mp_ability_space_elevator_tac" )
	SetupDevCommand( "Dev: Phase Rewind", "give mp_ability_phase_rewind" )
	//SetupDevCommand( "Gravity Star", "give mp_weapon_grenade_gravity" )
	#endif
}


void function SetupModelSpawner()
{
	#if UI
	SetupDevCommand( "marvin", "SetMDLSpawnerModel mdl/robots/marvin/marvin_gladcard.rmdl" )
	SetupDevCommand( "droppod_loot_LL_holo", "SetMDLSpawnerModel mdl/vehicle/droppod_loot/droppod_loot_LL_holo.rmdl" )
	SetupDevCommand( "death_box_01", "SetMDLSpawnerModel mdl/props/death_box/death_box_01.rmdl" )
	SetupDevCommand( "drone_frag", "mdl/robots/drone_frag/drone_frag.rmdl" )
	SetupDevCommand( "droppod_fireteam", "SetMDLSpawnerModel mdl/vehicle/droppod_fireteam/droppod_fireteam.rmdl" )
	SetupDevCommand( "droppod_loot_LL_holo", "mdl/vehicle/droppod_loot/droppod_loot_LL_holo.rmdl" )
	#endif
}

void function SetupSurvivalIncapShieldBot()
{
	#if UI
	SetupDevCommand( "Spawn Bot with Lv 1 Incap Shield", "script Dev_SpawnBotWithIncapShieldToView( 1 )" )
	SetupDevCommand( "Spawn Bot with Lv 2 Incap Shield", "script Dev_SpawnBotWithIncapShieldToView( 2 )" )
	SetupDevCommand( "Spawn Bot with Lv 3 Incap Shield", "script Dev_SpawnBotWithIncapShieldToView( 3 )" )
	SetupDevCommand( "Spawn Bot with Lv 4 Incap Shield", "script Dev_SpawnBotWithIncapShieldToView( 4 )" )
	SetupDevCommand( "Spawn Bot with a Random Incap Shield", "script Dev_SpawnBotWithIncapShieldToView( -1 )" )
	#endif
}

void function SetupEditor()
{
	#if UI
	SetupDevCommand( "Start Editing", "give mp_weapon_editor" )
	SetupDevCommand( "Zipline", "give mp_weapon_zipline" )
	#endif
}