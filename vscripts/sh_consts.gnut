global string FLOWSTATE_VERSION = "v3.71"
global const int INT_MIN = (1<<31)
global const int INT_MAX = (1<<31) - 1
global const float FLT_MAX = 3.40282e+38

global const void IN_SET = null
global typedef IntSet table<int, void>
global typedef EntitySet table<entity, void>

global typedef IntFromEntityCompare int functionref( entity, entity )

global const bool DEVSCRIPTS 		= true

global const bool PRE_RELEASE_DEMO 	= false

global const EMPTY_MODEL 			= $"mdl/dev/empty_model.rmdl"

global const DIFFICULTY_EASY 		= 0
global const DIFFICULTY_NORMAL 		= 1
global const DIFFICULTY_HARD 		= 2
global const DIFFICULTY_MASTER 		= 3

#if UI
global const float RUI_BADGAMETIME 	= -1 * pow( 10, 30 )
#endif

global enum eEliteTutorialState
{
	START,
	SHOW_INTRO,
	SAW_INTRO,
	SHOW_FORGIVENESS,
	SAW_FORGIVENESS,
}

global enum eLossForgivenessReason
{
	NONE,
	NOT_FULL_TEAM,
	TEAMMATE_ABANDON,
	CRASH
}

global enum eDeathScreenPanel
{
	NONE = -1,
	DEATH_RECAP,
	SPECTATE,
	SQUAD_SUMMARY
}

global struct Cylinder
{
	vector origin
	float radius
}

global struct Point
{
	vector origin
	vector angles
}

global struct Color
{
	int r
	int g
	int b
}

global struct UIPos
{
	int x = 0
	int y = 0
}

global struct UISize
{
	int width = 0
	int height = 0
}

global struct UIScaleFactor
{
	float x = 1.0
	float y = 1.0
}

global const SPECTATOR_SETTINGS 			  = $"settings/player/mp/spectator.rpak"

global const NPC_TITAN_PILOT_PROTOTYPE  = 0

global const HAS_TASKLIST_SYSTEM        = false
global const HAS_MISSIONINFO_SYSTEM     = false

global const MENUFALL                   = "menufall"
global const TEAM_DEATHMATCH            = "tdm"
global const SURVIVAL                   = "survival"
global const FREELANCE                  = "freelance"
global const CUSTOM_CTF                 = "custom_ctf"

global const map_editor_deprecated		= "map_editor_deprecated"

//gamemodes by @CafeFPS
global const fs_dm               = "fs_dm"
global const fs_aimtrainer		= "fs_aimtrainer"
global const fs_prophunt				= "fs_prophunt"
global const fs_duckhunt				= "fs_duckhunt"

global const FREELANCE_ENABLED          = false

global const VERBOSE_DAMAGE_PRINTOUTS   = false

global const SAVEGAME_VERSION           = 13 // increment when saves need to be tossed
global const PERSISTENCE_INIT_VERSION   = 303

global const NETWORTH_VAR               = "netWorth"

global const TESTCONST                  = 99

global const MAX_GAME_HISTORY           = 20 // Matches code

global const NON_RARES_PER_RARE         = 12

global const MAX_RANK                   = 24

global const MAX_GEN                    = 100

global const CPU_LEVEL_MINSPEC          = 0
global const CPU_LEVEL_DURANGO          = 1
global const CPU_LEVEL_HIGHEND          = 2

global const float INCHES_IN_KILOMETER   = 39370.1

global const float MAX_WORLD_COORD       = ( 1 << 16 ) - 1 //65535
global const float MAX_WORLD_COORD_BUFFER   = MAX_WORLD_COORD - 512
global const float COORD_RANGE           = MAX_WORLD_COORD + MAX_WORLD_COORD + 1 //-65535 to 65535
global const float MAX_WORLD_RANGE       = sqrt( COORD_RANGE * COORD_RANGE + COORD_RANGE * COORD_RANGE + COORD_RANGE * COORD_RANGE )

global const string INVERT_CONVAR_GAMEPAD   = "joy_inverty"
global const string INVERT_CONVAR_MOUSE     = "m_invert_pitch"

global const string AUTOSPRINT_CONVAR_NAME  = "autosprint_type"

global const bool HAS_NPC_SCORE_EVENTS  = false

//AI TRACKING
global const AI_HARD_LIMIT           = 36
global const MID_SPEC_PLAYER_CUTOFF  = 8 // treat the server as high-end when the player count is less or equal to this.
global const MID_SPEC_MAX_AI_COUNT   = 9 // max number of AI per side when playing on less then high-end machines (durango)

global const vector ZERO_VECTOR = <0,0,0>

// If modified, keep these functions updated:
// 		SetPersistentPilotLoadout()
//		IsValidPilotLoadoutProperty()
//		GetChildLoadoutProperties()
//		GetParentLoadoutProperty()
// 		PrintPilotLoadout()
global struct PilotLoadoutDef
{
	string 			name
	string 			tactical
	string			suit
	string 			race
	string 			execution
	string 			primary
	string 			primaryAttachment
	string 			primaryMod1
	string 			primaryMod2
	string 			primaryMod3
	string 			secondary
	string 			secondaryMod1
	string 			secondaryMod2
	string 			secondaryMod3
	string 			weapon3
	string 			weapon3Mod1
	string 			weapon3Mod2
	string 			weapon3Mod3
	string 			ordnance
	string 			passive1
	string 			passive2
	int				skinIndex
	int				camoIndex
	int 			primarySkinIndex
	int 			primaryCamoIndex
	int 			secondarySkinIndex
	int 			secondaryCamoIndex
	int 			weapon3SkinIndex
	int 			weapon3CamoIndex
	asset			setFile

	//ItemFlavor& 	characterClassFlavor // no circular types references or forward declarations... urgh

	// Everything above should be player choices that exist in persistent data
	// Everything below should be derived properties from the above or otherwise set by script

	array<string>	setFileMods

	array<string>	tacticalMods

	asset  			tacticalAsset
	asset  			ultimateAsset
	asset			passive1Asset
	asset			passive2Asset

	string			melee = "melee_pilot_emptyhanded"
	array<string>	meleeMods

	array<string>	primaryAttachments
	array<string>	primaryMods
	int ornull		primaryModsBitfield = null

	array<string>	secondaryMods
	int ornull		secondaryModsBitfield = null

	array<string>	weapon3Mods
	int ornull		weapon3ModsBitfield = null

	array<string>	ordnanceMods

	// SP uses this to maintain ordnance ammo
	int 			ordnanceAmmo = -1
}

// If modified, keep these functions updated:
// 		SetPersistentTitanLoadout()
//		IsValidTitanLoadoutProperty()
//		GetChildLoadoutProperties()
//		GetParentLoadoutProperty()
// 		PrintTitanLoadout()
global struct TitanLoadoutDef
{
	string 			name
	string 			titanClass
	string			primeTitanRef
	asset			setFile
	string 			primaryMod
	string			special
	string			antirodeo
	string 			passive1
	string 			passive2
	string          passive3
	string          passive4
	string          passive5
	string          passive6
	string 			voice = "titanos_bt"
	int				skinIndex
	int				camoIndex
	int				decalIndex
	int 			primarySkinIndex
	int 			primaryCamoIndex
	int 			difficulty
	string 			isPrime = "titan_is_not_prime" //Really should be bool, but it is a massive pain to restructure existing script to work with bool loadout value type.
	int 			primeSkinIndex		//Prime Titans don't have the same warpaints/nose arts than non Prime Titans have, so we need to store them separately
	int 			primeCamoIndex		//Prime Titans don't have the same warpaints/nose arts than non Prime Titans have, so we need to store them separately
	int 			primeDecalIndex		//Prime Titans don't have the same warpaints/nose arts than non Prime Titans have, so we need to store them separately
	int 			showArmBadge

	// Everything above should be player choices that exist in persistent data
	// Everything below should be derived properties from the above or otherwise set by script

	array<string>	setFileMods

	string			melee
	string 			coreAbility

	string			primary
	string			primaryAttachment
	array<string>	primaryMods

	string			ordnance
	array<string>	ordnanceMods

	array<string>	specialMods
	array<string>	antirodeoMods

	string 			titanExecution
}

//////////////////////////////////////////////////

//NinjaAssassin ( elite pilot ) consts
global const GRUNT_EXECUTE_MIN_DIST_FROM_PLAYER 		=	768		//ignore potential execution victim is outside this distance from player
global const GRUNT_EXECUTE_COOLDOWN_MIN					= 	3
global const GRUNT_EXECUTE_COOLDOWN_MAX					= 	4
global const MAX_GRUNTS_TO_EXECUTE_AT_ONCE				= 	2
global const GRUNT_EXECUTE_GROUP_COOLDOWN_MIN			= 	30
global const GRUNT_EXECUTE_GROUP_COOLDOWN_MAX			= 	31


//default to give for connecting players.  This might have to be changed to something else as right now it's controlling the "good" intro for fracture.
global const CONNECT_TIME_DEFAULT = 23

global const OUT_OF_BOUNDS_TIME_LIMIT = 30.0
global const OUT_OF_BOUNDS_DECAY_TIME = 15.0
global const OUT_OF_BOUNDS_DECAY_DELAY = 1.0

global const MAX_TRACKED_CHALLENGES = 3

// OFFICIAL
global const int FRIENDLY_R = 87
global const int FRIENDLY_G = 151
global const int FRIENDLY_B = 219
// 5797DB

global const int ENEMY_R = 255
global const int ENEMY_G = 120
global const int ENEMY_B = 32
// FF7820

global const int LOCAL_R = 254
global const int LOCAL_G = 184
global const int LOCAL_B = 0
// FFB800

global const int PARTY_R = 91
global const int PARTY_G = 255
global const int PARTY_B = 31

global const int BURN_R = 246
global const int BURN_G = 134
global const int BURN_B = 40

global const int AIRDROP_R = 10
global const int AIRDROP_G = 224
global const int AIRDROP_B = 233

global const vector TEAM_COLOR_ENEMY = 		<ENEMY_R, ENEMY_G, ENEMY_B>
global const vector TEAM_COLOR_FRIENDLY = 	<FRIENDLY_R, FRIENDLY_G, FRIENDLY_B>
global const vector TEAM_COLOR_PARTY = 		<PARTY_R, PARTY_G, PARTY_B>
global const vector TEAM_COLOR_YOU = 		<LOCAL_R, LOCAL_G, LOCAL_B>
global const vector BURN_COLOR = 			<BURN_R, BURN_G, BURN_B>
global const vector COLOR_AIRDROP = 		<AIRDROP_R, AIRDROP_G, AIRDROP_B>
// END OFFICIAL

global const TIME_ZOFFSET = 11520

global const LOCALPLAYER_NAME_COLOR 	= [ LOCAL_R, LOCAL_G, LOCAL_B ]

// for HUD elements
global const FRIENDLY_COLOR 			= TEAM_COLOR_FRIENDLY
global const ENEMY_COLOR 				= TEAM_COLOR_ENEMY

//FOR RUI HUD -> make sure any changes here line up with global_defs.rui
global const int WP_STYLE_OBJECTIVE = 0
global const int WP_STYLE_DEATHBOX_NORMAL = 2
global const int WP_STYLE_DEATHBOX_CORPSERUN = 3
global const int WP_STYLE_LOOT_DROPOFF = 4
global const int WP_STYLE_MSOBJ_CENTER = 5
global const int WP_STYLE_MSOBJ_LEFT = 6
global const int WP_STYLE_MSOBJ_RIGHT = 7

// for particle color control points
global const FRIENDLY_COLOR_FX 		= TEAM_COLOR_FRIENDLY
global const ENEMY_COLOR_FX 		= TEAM_COLOR_ENEMY
global const NEUTRAL_COLOR_FX 		= <220,220,220>

global const OBITUARY_COLOR_BURN_WEAPON = <246,134,40>
global const BURN_CARD_WEAPON_HUD_COLOR = [ 246, 134, 40, 255 ]
global const BURN_CARD_WEAPON_HUD_COLOR_VECTOR = <0.965,0.525,0.157>

//const BURN_CARD_WEAPON_HUD_COLOR_STRING = "47, 206, 62, 255"
//const BURN_CARD_WEAPON_HUD_GLOW_STRING = "44 220 12 255"

global enum eTargetGrade
{
	CHAMPION 			= 0x00001,
	CHAMP_KILLLEADER 	= 0x00002,
	KILLLEADER 			= 0x00004,
	JUMPMASTER 			= 0x00008,
}

global enum eWeaponProficiency
{
	POOR
	AVERAGE
	GOOD
	VERYGOOD
	PERFECT
}

global enum eCodeDialogueID
{
	MAN_DOWN		// 0
	SALUTE			// 1
	ENEMY_CONTACT	// 2
	RUN_FROM_ENEMY	// 3
	RELOADING		// 4
	MOVE_TO_ASSAULT	// 5
	MOVE_TO_SQUAD_LEADER 	// 6
	FAN_OUT					// 7
	TAKE_COVER_FROM_ENEMY	// 8
	CHASE_ENEMY				// 9
	GRENADE_OUT 			// 10
	DANGEROUS_AREA_DISPLACE // 11
	REACT_SURPRISED 		// 12
	DIALOGUE_COUNT
}

global enum eTitanVO
{
	RODEO_RAKE
	ENEMY_EJECTED
	FRIENDLY_EJECTED
	FRIENDLY_TITAN_DEAD
	ENEMY_TITAN_DEAD
	ENEMY_TARGET_ELIMINATED
	FRIENDLY_TITAN_HELPING
	PILOT_HELPING
	FRIENDLY_RODEOING_ENEMY
}

// if we havent hurt the target recently then forget about it
global const CURRENT_TARGET_FORGET_TIME = 8.0

global enum scoreEventPointType
{
	DEFAULT
	ASSAULT
	DEFENSE
	DETONATION
	DISTANCE
}

global const BLINKING_BLUE_LIGHT_PARTICLE = "blue_light_large_blink"

global enum eNPCTitanMode
{
	FOLLOW = 0
	STAY = 1
	//ROAM = 2

	MODE_COUNT = 2
}

global const MAX_BULLET_PER_SHOT = 35

//--------------------------------------------------
// 				CONTROL PANELS
//--------------------------------------------------

global enum crosshairPriorityLevel
{
	ROUND_WINNING_KILL_REPLAY,
	MENU,
	PREMATCH,
	TITANHUD,
	DEFAULT
}


global const USE_TIME_INFINITE = -1

//------------------------
// WEAPON & MODS
//------------------------


global const DEFAULT_WARNING_SFX = "Weapon_R1_Satchel.ArmedBeep"

global const MGL_MAGNETIC_FORCE = 1600
global const TT_MAGNETIC_FORCE = 1600.0

global const PROX_MINE_MARKER_TIME = 3

// Vanguard Shoulder Rockets
global const float VANGUARD_SHOULDER_MISSILE_SPEED = 2200

//--------------------------------------------------
// 				TURRETS
//--------------------------------------------------



// shared values for cluster rocket explosions
global const CLUSTER_ROCKET_BURST_COUNT 				= 20 //number of bursts
global const CLUSTER_ROCKET_BURST_COUNT_BURN			= 32 //number of bursts with burn card
global const CLUSTER_ROCKET_BURST_COUNT_MOD				= 10 //Concentrated Payload has the higher initial damage but reduced duration of the secondary explosions.
global const CLUSTER_ROCKET_BURST_DELAY 				= 0.5 //time before the popcors burst off +/- some randomness
global const CLUSTER_ROCKET_BURST_OFFSET 				= 0.3 // how much + & - the delay to set off the explosions
global const CLUSTER_ROCKET_BURST_RANGE 				= 250.0 //range of the bursts
global const CLUSTER_ROCKET_BURST_GROUP_SIZE 			= 5 //number of explosions before a delay
global const CLUSTER_ROCKET_BASE_FIRERATE 				= 0.1 //setting manually to avoid having the call the get function every frame
global const CLUSTER_ROCKET_DURATION 					= 5.0 //duration of the bursts
global const PAS_NORTHSTAR_CLUSTER_ROCKET_DURATION 		= 8.0 //duration of the bursts with northstar's kit
global const CLUSTER_ROCKET_FX_TABLE 					= "exp_rocket_cluster_secondary"

// the amount of damage needed to break melee assist
global const DAMAGE_BREAK_MELEE_ASSIST = 1400

// ----------------------------
//  LEVEL SCRIPT SHARED CONSTS
// ----------------------------

// mp_outpost_207
global enum eOutpostCannonTargets
{
	CAPITAL_SHIP,
	DECOY_SHIP
}

// mp_harmony_mines
global enum eDiggerState
{
	SPIN,
	TWITCH,
	COUNT
}

// ----------------------
//  TITAN HUD
// ----------------------

global const EJECT_FADE_TIME = 3.0 // time for eject interface to fade out

//-----------------------------------------------------
// FLYERS
//-----------------------------------------------------

global const CONSTFLYERHEALTH		= 100
global const CONSTFLYERHEALTHZERO	= 100000
//const FX_FLYERDEATH 		= "blood_flyer_death_01" -> taking out temporarily, robot deleting old fx

//XWING FLYER CREATION OPTIONS
global enum eFlyerType
{
	Real
	Cheap
	Static
	CheapMix
	SwarmMix
	Cheap500x
	Cheap1000x
}

global enum eFlyerPathScale
{
	x1
	x500
	x1000
}

global enum eRespawnStatus
{
	NONE,
	WAITING_FOR_PICKUP,
	WAITING_FOR_DELIVERY,
	WAITING_FOR_DROPPOD,
	PICKUP_DESTROYED,
	SQUAD_ELIMINATED
	_COUNT,
}

// types of ways drop calls can be used
global enum eDropStyle
{
	NONE = 0
	NEAREST
	NEAREST_YAW 			// the node nearest the specified origin that fits the supplied yaw
	FORCED				// force to spawn at the specified location
	NEAREST_YAW_FALLBACK           // nearest node and yaw, with wider search area
	FROM_SET_DISTANCE				// spawn at a set distance
	ZIPLINE_NPC				// starts at the origin and works it's way out in four directions, with fallback
	RANDOM_FROM_YAW		// spawn at a random node that meets the yaw requirement
	FLYER_PICKUP		// same as ZIPLINE_NPC just a more suitable name, starts at the origin and works it's way out in four directions, with fallback
}

global enum eStickState
{
	NEUTRAL = 0,
	LEFT = 1,
	RIGHT = 2,
	_count,
}

//Max Time spent after death before respawning again is DEATHCAM_TIME + KILL_REPLAY_BEFORE_KILL_TIME_TITAN + KILL_REPLAY_AFTER_KILL_TIME
global const DEATHCAM_TIME 								= 11.0 // the amount of time spent watching the you-are-dead death cam (not kill replay)
global const KILL_REPLAY_BEFORE_KILL_TIME_PILOT 		= 3.5
global const KILL_REPLAY_BEFORE_KILL_TIME_TITAN 		= 6.8
global const KILL_REPLAY_BEFORE_KILL_TIME_DROPPOD 		= 2.0
global const KILL_REPLAY_AFTER_KILL_TIME 				= 2.0

global const DEATHCAM_TIME_SHORT 						= 3.0
global const KILL_REPLAY_BEFORE_KILL_TIME_SHORT 		= 3.5
global const KILL_REPLAY_AFTER_KILL_TIME_SHORT 			= 1.0
global const RESPAWN_BUTTON_BUFFER 						= 0.0 // the amount of time before you're allowed to respawn, after DEATHCAM_TIME

global const DEFAULT_SCRIPTED_ANIMATION_BLEND_TIME 		= 0.2
global const DEFAULT_SCRIPTED_ARRIVAL_DISTANCE 			= 16

global const RODEO_APPROACH_FALLING_FROM_ABOVE 			= 0
global const RODEO_APPROACH_JUMP_ON 					= 1

global const SAFE_TITANFALL_DISTANCE 					= 125
global const SAFE_TITANFALL_DISTANCE_CTF 				= 270

//global const NUM_PERSISTENT_PILOT_LOADOUTS 			= 10
global const NUM_PERSISTENT_TITAN_LOADOUTS 				= 10

global const EMBARK_TIMEOUT = 13.0 // how long you have to reach your titan before it stands up and bubble shield starts to fade


//-----------------------------------------------------
// EMP GRENADES
//-----------------------------------------------------
global const EMP_GRENADE_PILOT_SCREEN_EFFECTS_DURATION_MIN 	= 1.5 // duration of emp screen effects when you're at the edge of the damage radius
global const EMP_GRENADE_PILOT_SCREEN_EFFECTS_DURATION_MAX 	= 2.5 // duration of emp screen effects when you're at the center of the explosion
global const EMP_GRENADE_PILOT_SCREEN_EFFECTS_FADE 			= 1.0
global const EMP_GRENADE_PILOT_SCREEN_EFFECTS_MIN 			= 0.15
global const EMP_GRENADE_PILOT_SCREEN_EFFECTS_MAX 			= 0.4

global const EMP_IMPARED_SOUND = "EMP_VisualImpair"


 // increment integer when ain node format changes. Forces new ain file on maps
global const AIN_REV = 21


// dialogue
global const VOICE_COUNT = 6


//--------------------------------------------------
// 				ARMOR TYPES
//--------------------------------------------------

global const ARMOR_TYPE_HEAVY 	= 1
global const ARMOR_TYPE_NORMAL 	= 0

global const SKYBOXLEVEL	= "skybox_cam_level"
global const SKYBOXSPACE 	= "skybox_cam_intro"

global const WARPINFXTIME 	= 2.7

global const MATCH_PROGRESS_RED_EYE_AND_ARMADA 	= 1
global const MATCH_PROGRESS_AIR_ZINGERS 		= 4
global const MATCH_PROGRESS_REFUEL_GOBLINS 		= 8

//--------------------------------------------------
// 				INTRO SKYSCALE SETTINGS
//--------------------------------------------------
global const SKYSCALE_SPACE								= 0.0
global const SKYSCALE_DEFAULT							= 1.0
global const SKYSCALE_FRACTURE_WARP						= 0.25
global const SKYSCALE_FRACTURE_DOOROPEN_ACTOR 			= 0.5
global const SKYSCALE_FRACTURE_DOOROPEN_PLAYER 			= 0.33
global const SKYSCALE_FRACTURE_IMC_ACTOR				= 0.5
global const SKYSCALE_FRACTURE_IMC_SHIP					= 0.5
global const SKYSCALE_FRACTURE_IMC_PLAYER				= 0.5

global const SKYSCALE_COLONY_IMC_ACTOR					= 0.85
global const SKYSCALE_COLONY_IMC_SHIP					= 0.7
global const SKYSCALE_COLONY_IMC_PLAYER					= 0.7
global const SKYSCALE_COLONY_MCOR_ACTOR					= 0.65
global const SKYSCALE_COLONY_MCOR_SHIP					= 0.65
global const SKYSCALE_COLONY_MCOR_PLAYER				= 0.65

global const SKYSCALE_RELIC_IMC_ACTOR					= 0.9
global const SKYSCALE_RELIC_IMC_SHIP					= 0.5
global const SKYSCALE_RELIC_IMC_PLAYER					= 0.85
global const SKYSCALE_RELIC_MCOR_ACTOR					= 0.5
global const SKYSCALE_RELIC_MCOR_SHIP					= 0.5
global const SKYSCALE_RELIC_MCOR_PLAYER					= 0.5

global const SKYSCALE_OUTPOST_IMC_ACTOR					= 0.4
global const SKYSCALE_OUTPOST_IMC_SHIP					= 0.4
global const SKYSCALE_OUTPOST_IMC_PLAYER				= 0.4
global const SKYSCALE_OUTPOST_DOOROPEN_IMC_ACTOR		= 0.9
global const SKYSCALE_OUTPOST_DOOROPEN_IMC_SHIP			= 0.8
global const SKYSCALE_OUTPOST_DOOROPEN_IMC_PLAYER		= 0.9
global const SKYSCALE_OUTPOST_MCOR_ACTOR				= 0.5
global const SKYSCALE_OUTPOST_MCOR_SHIP					= 0.4
global const SKYSCALE_OUTPOST_MCOR_PLAYER				= 0.4
global const SKYSCALE_OUTPOST_DOOROPEN_MCOR_ACTOR		= 1.0
global const SKYSCALE_OUTPOST_DOOROPEN_MCOR_SHIP		= 0.8
global const SKYSCALE_OUTPOST_DOOROPEN_MCOR_PLAYER		= 0.6

global const SKYSCALE_BONEYARD_MCOR_ACTOR				= 0.5
global const SKYSCALE_BONEYARD_MCOR_SHIP				= 0.6
global const SKYSCALE_BONEYARD_MCOR_PLAYER				= 0.5
global const SKYSCALE_BONEYARD_DOOROPEN_MCOR_ACTOR		= 0.85
global const SKYSCALE_BONEYARD_DOOROPEN_MCOR_SHIP		= 1.0
global const SKYSCALE_BONEYARD_DOOROPEN_MCOR_PLAYER 	= 0.8
global const SKYSCALE_BONEYARD_IMC_ACTOR				= 0.5
global const SKYSCALE_BONEYARD_IMC_SHIP					= 0.35
global const SKYSCALE_BONEYARD_IMC_PLAYER				= 0.5
global const SKYSCALE_BONEYARD_DOOROPEN_IMC_ACTOR		= 0.8
global const SKYSCALE_BONEYARD_DOOROPEN_IMC_SHIP		= 1.0
global const SKYSCALE_BONEYARD_DOOROPEN_IMC_PLAYER		= 0.8

global const SKYSCALE_AIRBASE_MCOR_ACTOR				= 0.95
global const SKYSCALE_AIRBASE_MCOR_SHIP					= 0.95
global const SKYSCALE_AIRBASE_MCOR_PLAYER				= 0.95
	
global const SKYSCALE_O2_MCOR_ACTOR						= 0.4
global const SKYSCALE_O2_MCOR_SHIP						= 0.4
global const SKYSCALE_O2_MCOR_PLAYER					= 0.4
global const SKYSCALE_O2_DOOROPEN_MCOR_ACTOR			= 1.0
global const SKYSCALE_O2_DOOROPEN_MCOR_SHIP				= 1.1
global const SKYSCALE_O2_DOOROPEN_MCOR_PLAYER			= 0.9

//--------------------------------------------------
// 				DLIGHT TYPES
//--------------------------------------------------

// Base types
global const DLIGHT_WHITE  = < 1, 1, 1 >
global const DLIGHT_RED    = < 1, 0, 0 >
global const DLIGHT_GREEN  = < 0, 1, 0 >
global const DLIGHT_BLUE   = < 0, 0, 1 >
global const DLIGHT_YELLOW = < 1, 1, 0 >
global const DLIGHT_PURPLE = < 1, 0, 1 >

// Green types
global const DLIGHT_SEAGREEN   = < 0, 1, 1 >
global const DLIGHT_LIGHTGREEN = < 0.3, 1, 1 >
global const DLIGHT_RICH_BROWN  = < 0.8, 0.3, 0.1 >

//--------------------------------------------------
// 				PERFORMANCE
//--------------------------------------------------

// Performance
global enum PerfIndexClient
{
	str1,
	PlayerCanEmbarkTitan1,
	PlayerCanEmbarkTitan2,
	FindBestEmbark,
	FindUserEvent,

	RunThreadsFrame,
	HudElementUpdate,
	HudElemUpdateLoop,
	CodeCallback_PreClientThreads,
	HUDThink,
	HUDThink_1,
	HUDThink_2,
	HUDThink_3,
	HUDThink_4,
	HUDThink_5,
	HUDThink_6,

	GameStatePlaying,

	ScoreBoard,
	ScoreBoardUpdate,
	SUR_ScoreBoardRules_1,
	SUR_ScoreBoardRules_2,
	SUR_ScoreBoardRules_3,
	SUR_HudRefresh,
	SUR_HudRefresh_1,
	SUR_HudRefresh_2,
	SUR_HudRefresh_3,
	SUR_HudRefresh_4,

	FriendIconsTrace_Update,
	FriendIconsHUD_Update,
	HealthBarOverlayHUD_Update,
	UpdateCrosshair,
	SmartAmmo_UpdateHUD,
	OnEntityCreation,
	OnEntityDestroy,
	DamageIndicator,
	GrenadeIndicator,
	PilotThreatHud_Update,
	UpdateThreatIcons,
	UpdateDamageStates,
	UpdateEscalationDpadIcons,
	UpdateTitanModeHUD,
	Fracture_AATracers_1,
	Fracture_AATracers_2,
	Fracture_RefuelShips,
	ClusterShipsFireRocketsThink,
	CreateIndividualShipsFromCluster,
	InventoryRefreshTotal,
	InventoryRefreshStart,
	InventoryRefreshEnd,
	UpdateLootRui,
	LootGoesInPack,
}

global enum PerfIndexServer
{
	str1,
	PlayerCanEmbarkTitan1,
	PlayerCanEmbarkTitan2,
	FindBestEmbark,
	FindUserEvent,

	GetSpawnPointForStyle,
	CB_FindLeechTarget,
	CB_OnServerAnimEvent,
	CB_ClientCommand,
	TraceLine,
	GetZiplineForPlayer,
	RespawnTitanPilot,
	NoSpawnAreaCheck,
	AIChatter,

	PersistentStatTracking,
	AirtimeChecks,
	DroneLogic,
	BirdCluster,
	BirdCluster_perch,
	BirdCluster_perch_trace,
	BirdCluster_perch_angle,
	BirdCluster_spawn,
	SurvivalLootCache,
	ThreatDetection,
	HoverTankPathCalc,
	HoverTankFlyPathCalc,
	HoverTankThink,

	AddToInventory,
}

global const SharedPerfIndexStart = 100

global enum PerfIndexShared
{
	RunThread,
	SmartAmmo_UpdateTargets,
	StringToColors,
	CB_IsLeechable,
}

global const HOTDROP_IMPACT_FX_TABLE = "droppod_impact"

global const int PICKUP_FLAG_ALT 					= 0x00001
global const int PICKUP_FLAG_AUTO 					= 0x00002
global const int PICKUP_FLAG_FROM_MENU 				= 0x00004
global const int PICKUP_FLAG_ATTACH_ACTIVE_ONLY 	= 0x00008
global const int PICKUP_FLAG_ATTACH_STOWED_ONLY 	= 0x00010
global const int PICKUP_FLAG_LONG 					= 0x00020

// cinematic event flags; server controlled cinematics should set/clear these when active
//global const CE_FLAG___						= 0x0001
global const CE_FLAG_INTRO					= 0x0002
global const CE_FLAG_EXECUTION				= 0x0004 // unused?
global const CE_FLAG_EMBARK					= 0x0008
global const CE_FLAG_DISEMBARK				= 0x0010
global const CE_FLAG_HIDE_MAIN_HUD_INSTANT	= 0x0020
global const CE_FLAG_CLASSIC_MP_SPAWNING	= 0x0040
global const CE_FLAG_HIDE_MAIN_HUD			= 0x0080
global const CE_FLAG_TITAN_3P_CAM			= 0x0100
global const CE_FLAG_WAVE_SPAWNING			= 0x0200
global const CE_FLAG_EOG_STAT_DISPLAY		= 0x0400
global const CE_FLAG_HIDE_PERMANENT_HUD		= 0x0800

global const TITAN_DAMAGE_STAGE_FULL 		= 1.0
global const TITAN_DAMAGE_STAGE_1 			= 0.75
global const TITAN_DAMAGE_STAGE_2 			= 0.5
global const TITAN_DAMAGE_STAGE_3 			= 0.25
global const TITAN_DAMAGE_STAGE_DOOMED 		= 0.0
global const int DOOMED_MIN_HEALTH 			= 1

global const float AREA_SONAR_SCAN_RADIUS 			= 1250.0
global const float AREA_SONAR_SCAN_PULSE_DURATION 	= 6.0

global const float SONAR_GRENADE_RADIUS 			= 1250.0
global const float SONAR_GRENADE_PULSE_DURATION 	= 6.0
// these numbers should be kept in sync with bakery assets: inside_sonar, outline_sonar
global const float SONAR_PULSE_SPACE = 400.0
global const float SONAR_PULSE_SPEED = 300.0

global const OFFHAND_RIGHT			= 0
global const OFFHAND_LEFT			= 1
global const OFFHAND_ANTIRODEO		= 2
global const OFFHAND_EQUIPMENT		= 3
global const OFFHAND_INVENTORY		= 4
global const OFFHAND_MELEE			= 5

global const OFFHAND_TACTICAL = OFFHAND_LEFT
global const OFFHAND_ULTIMATE = OFFHAND_INVENTORY
global const OFFHAND_TITAN_CENTER	= 2

global const OFFHAND_COUNT			= 6

global const OFFHAND_ORDNANCE		= OFFHAND_RIGHT
global const OFFHAND_SPECIAL		= OFFHAND_LEFT

global const SHIELD_REGEN_TICK_TIME 					= 0.1
global const TITAN_DOOMED_REGEN_DELAY					= 0.5
global const TITAN_DOOMED_REGEN_AMOUNT					= 0.0025

global const TITAN_SHIELD_REGEN_TIME					= 6.0

global const TITAN_SHIELD_PERMAMENT_DAMAGE_FRAC			= 0.0

global const bool SHOW_SATCHEL_DETONATION_HINT_WITH_CLACKER = false

global enum eTitanAvailability
{
	Default,
	Always,
	Once,
	Never,
	Custom,

	LastTitanAvailability
}

global enum eTitanExitEnabled
{
	Default,
	Always,
	Never,
	DisembarkOnly,

	LastTitanExit
}

global enum eSpawnAsTitan
{
	Default,
	Always,
	Once,
	Never,

	LastSpawnAsTitan
}

global enum eWaveSpawnType
{
	DISABLED,				// not used
	FIXED_INTERVAL,			// spawn every 30 seconds (depending on playlist var "wave_spawn_interval")
	PLAYER_DEATH,			// spawn 30 seconds after the first player to die in a new wave. (per team)
	MANUAL,					// set the spawn time manually
	DROPSHIP
}

global enum eAllowNPCs
{
	None,
	Default,
	PlayerControlledOnly,
	GruntOnly,
	SpectreOnly,

	LastAllowNPCs
}

global enum eMinimapState
{
	Default,
	Hidden,

	LastMinimapState
}

global enum eAmmoLimit
{
	Default,
	Limited,
	None,

	LastAmmoLimit
}

global enum eEliminationMode
{
	Default,
	Pilots,
	Titans,
	PilotsTitans,

	LastEliminationMode
}

global const CLOAK_INCLUDE_FADE_IN_TIME = true
global const CLOAK_EXCLUDE_FADE_IN_TIME = false

global enum eMarvinType
{
	SHOOTER,
	WORKER,
	MARVINONE,
	FIREFIGHTER,
	COUNT
}

global enum eMarvinFace
{
	NONE,
	HAPPY,
	SAD,
	ANGRY,
	THINK1,
	THINK2,
	QUESTION,
	COUNT
}

global enum eLobbyType
{
	SOLO,
	PARTY_LEADER,
	PARTY_MEMBER,
	MATCH,
	PRIVATE_MATCH
}

global enum userSignInState
{
	ERROR,
	SIGNING_IN,
	SIGNED_IN,
	SIGNED_OUT
}

global enum eEventNotifications
{
	Clear,
	RoundWinningKillReplayCancelled,
	Grapple_WasGrappled_ByTitan,
	Grapple_WasGrappled_ByPilot,
	WEAP_GotAmmo,
	BLEEDOUT_SelfHealPrompt,
	SURVIVAL_GladiatorCardCollected,
	SURVIVAL_RelinquishedJumpmaster,
	SURVIVAL_NewJumpmaster,
	SURVIVAL_RejoinedSquad,
	SURVIVAL_DroppingSolo,
}

global enum ePermanentEventNotifications
{
	Empty = -1,
}

global enum ePrivateMatchStartState
{
	NOT_READY,
	READY,
	STARTING,
}

global const float TITANFALL_INNER_RADIUS 				= 90.0
global const float TITANFALL_OUTER_RADIUS 				= 120.0

global const TITANHOTDROP_DISABLE_ENEMY_TITANFALL_RADIUS = 450


global const MINION_BUBBLE_SHIELD_RADIUS		= 230
global const MINION_BUBBLE_SHIELD_RADIUS_SQR	= 51984		//228 * 228 ... we give some slack for floating point error

global const SPECTRE_MAX_SIGHT_DIST 			= 3000

global const ARC_TITAN_EMP_FIELD_RADIUS 			= 330
global const ARC_TITAN_EMP_FIELD_RADIUS_SQR 		= 108900 //pow( 330, 2 )
global const ARC_TITAN_EMP_FIELD_INNER_RADIUS 		= 150
global const ARC_TITAN_EMP_FIELD_INNER_RADIUS_SQR	= 22500 //pow( 150, 2 )

global const TITAN_GRAPPLE_DAMAGE 					= 600
global const TITAN_GRAPPLE_DEBOUNCE_TIME 			= 1.0

global const CLOAKED_DRONE_SPEED			= 1800
global const CLOAKED_DRONE_ACC				= 1.75
global const CLOAKED_DRONE_YAWRATE			= 150
global const CLOAKED_DRONE_LOOPING_SFX 		= "Coop_CloakDrone_Beam"
global const CLOAKED_DRONE_WARP_IN_SFX 		= "Coop_DroneTeleport_In"
global const CLOAKED_DRONE_WARP_OUT_SFX 	= "Coop_DroneTeleport_Out"
global const CLOAKED_DRONE_CLOAK_START_SFX 	= "CloakDrone_Cloak_On"
global const CLOAKED_DRONE_CLOAK_LOOP_SFX 	= "CloakDrone_Cloak_Sustain_Loop"
global const CLOAKED_DRONE_HOVER_LOOP_SFX 	= "AngelCity_Scr_DroneSearchHover"

global const MINIMAP_CLOAKED_DRONE_SCALE 	= 0.070

global const FD_FIRE_DAMAGE_SCALE 			= 1.2
global const FD_HOT_STREAK_MULTIPLIER 		= 1.5

//--------------------------------------------------
// 					CHALLENGES
//--------------------------------------------------

global enum eChallengeCategory
{
	ROOT,				// Only used by challenges menu

	GENERAL,
	TIME,
	DISTANCE,
	KILLS,
	MOBILITY_KILLS,
	MELEE_KILLS,

	TITAN_PRIMARY,		// Only used by challenges menu

	WEAPON_40MM,
	WEAPON_XO16,
	WEAPON_TITAN_SNIPER,
	WEAPON_ARC_CANNON,
	WEAPON_ROCKET_LAUNCHER,
	//WEAPON_TRIPLE_THREAT,

	TITAN_ORDNANCE,

	WEAPON_SALVO_ROCKETS,
	WEAPON_HOMING_ROCKETS,
	WEAPON_DUMBFIRE_ROCKETS,
	//WEAPON_SHOULDER_ROCKETS,

	PILOT_PRIMARY,		// Only used by challenges menu

	WEAPON_SMART_PISTOL,
	WEAPON_SHOTGUN,
	WEAPON_R97,
	WEAPON_CAR,
	WEAPON_LMG,
	WEAPON_RSPN101,
	WEAPON_HEMLOK,
	WEAPON_G2,
	WEAPON_DMR,
	WEAPON_SNIPER,

	PILOT_SECONDARY,	// Only used by challenges menu

	WEAPON_SMR,
	WEAPON_MGL,
	WEAPON_ARCHER,
	WEAPON_DEFENDER,

	PILOT_ORDNANCE,

	WEAPON_FRAG_GRENADE,
	WEAPON_EMP_GRENADE,
	//WEAPON_PROXIMITY_MINE,
	WEAPON_SATCHEL,

	COOP,
	DAILY,

	CATEGORY_COUNT,
}

//--------------------------------------------------
// 				DAILIES / TIME FUNCTIONS
//--------------------------------------------------

global const SECONDS_PER_WEEK				= 604800
global const SECONDS_PER_DAY				= 86400
global const SECONDS_PER_HOUR				= 3600
global const SECONDS_PER_MINUTE				= 60
global const HOURS_PER_DAY					= 24
global const MINUTES_PER_HOUR 				= 60
global const DAYS_PER_WEEK 					= 7
global const FNF_SCHEDULE_RESET_SECONDS		= 27000 // 7.5 hours
global const DAILY_RESET_TIME_ZONE_OFFSET	= -10 	// subtract 10 hours to UTC time. This will cause dailies to reset at 3am PST(-8) / 6am EST(-5)


global enum eNumericDisplayType
{
	INT
	FLOAT2F
	TIME_SECONDS_SHORT
	TIME_SECONDS_LONG
	TIME_MINUTES_LONG
	SHORT_INT
}

/*
Enable/Disable/SetNPCFlag

NPC_ALLOW_PATROL
NPC_ALLOW_INVESTIGATE
NPC_ALLOW_FLEE
NPC_ALLOW_HAND_SIGNALS
NPC_STAY_CLOSE_TO_SQUAD
NPC_DISABLE
NPC_ANIM_FOV
NPC_ANIM_ADVANCE_CYCLE_EVERY_FRAME
NPC_LOOK_FOR_CORPSE
NPC_DIRECTIONAL_MELEE
NPC_RAGDOLL_IMMEDIATE
NPC_DIE_ON_ANY_DAMAGE
NPC_AIM_DIRECT_AT_ENEMY	// instead of at LSP
NPC_MUTE_TEAMMATE
NPC_NO_LISTEN_TEAMMATE
NPC_IGNORE_FRIENDLY_SOUND
NPC_NEW_ENEMY_FROM_SOUND
NPC_TEAM_SPOTTED_ENEMY
NPC_PAIN_IN_SCRIPTED_ANIM
NPC_NO_PAIN
NPC_NO_GESTURE_PAIN
NPC_CROUCH_COMBAT
NPC_IGNORE_ALL
NPC_DISABLE_SENSING
NPC_USE_SHOOTING_COVER
NPC_NO_WEAPON_DROP
NPC_NO_MOVING_PLATFORM_DEATH


Enable/Disable/SetNPCMoveFlag

NPCMF_IGNORE_CLUSTER_DANGER_TIME
NPCMF_FOLLOW_SAFE_PATHS
NPCMF_PREFER_SPRINT
NPCMF_WALK_ALWAYS
NPCMF_WALK_NONCOMBAT

*/

global const ZIPLINE_IDLE_ANIM = "pt_zipline_slide_idle"

global const float ZIPLINES_COOLDOWN = 1.5

global const DEFAULT_CONVERSATION_DEBOUNCE_TIME 	= 10.0
global const AI_CONVERSATION_RANGE_SQR 				= 20250000
global const AI_CONVERSATION_RANGE 					= 4500 // should match above

global const MAX_VOICE_DIST_SQRD 					= 9000000 // 3000 * 3000

global const AI_FRIENDLY_CHATTER_RANGE_SQR 			= 4410000
global const AI_FRIENDLY_CHATTER_RANGE 				= 2100 // should match above

global const REQUIRES_ANY 							= 0
global const REQUIRES_PILOT 						= 1
global const REQUIRES_TITAN 						= 2

global const HIGHLIGHT_USE_DEFAULT 					= -1
global struct HighlightContext
{
	int highlightId
	int contextId
	string name
	bool entityVisible 			= true
	int insideSlot 				= 0
	int outsideSlot 			= 0
	int insideSlotFocused 		= HIGHLIGHT_USE_DEFAULT
	int outsideSlotFocused 		= HIGHLIGHT_USE_DEFAULT
	float outlineRadius 		= 1
	bool adsFade 				= true
	bool afterPostProcess 		= false

	vector[2] paramVecs

	float nearDist 				= 0
	float farDist 				= -1.0 // will use default code value instead
	float farFadeInDist
	bool requiresNotFullHealth
	bool requiresCanPickupOrdnance
	bool requiresCanPickupClip
	int requiresClass = REQUIRES_ANY
	bool requiresWeakPointsVisible
	bool requiresOwnedByLocalPlayer = false
	bool requiresStationary 		= false
	bool disableDeathFade 			= false

	int drawFuncId = 0
	void functionref( entity ) thinkFunction

	int colorID = -1
}

global struct ShGlobals
{
	array<PilotLoadoutDef> 								defaultPilotLoadouts
	bool 												defaultPilotLoadoutsInitialized

	TitanLoadoutDef[ NUM_PERSISTENT_TITAN_LOADOUTS ] 	defaultTitanLoadouts

	array<PilotLoadoutDef>								cachedPilotLoadouts
	TitanLoadoutDef[ NUM_PERSISTENT_TITAN_LOADOUTS ]	cachedTitanLoadouts

	float proto_soldierShieldRegenDelay 		= 6.0
	bool proto_npcsDropGrenades 				= false
	int waveSpawnType = eWaveSpawnType.DISABLED
	float waveSpawnInterval 					= 15.0

	table<string,array<void functionref(entity, var)> >	deathCallbacks
	table<int,array<void functionref(entity, var)> >	damageSourceIdCallbacks

	table<string, HighlightContext> highlight
}

global ShGlobals shGlobal

global const HEALTH_PER_HEALTH_BAR_SEGMENT 		= 500

global enum ePresentationType
{
	INACTIVE,
	PLAY,
	CHARACTER_SELECT,
	CHARACTER_SKIN,
	CHARACTER_CARD,
	CHARACTER_QUIPS,
	WEAPON_CATEGORY,
	WEAPON_SKIN,
	WEAPON_CHARMS,
	WEAPON,
	POSTGAME,
	STORE,
	NO_MODELS,
	LOOT,
	BATTLE_PASS,
	BATTLE_PASS_3,
	COLLECTION_EVENT,
	MODEL
	
	COUNT
}

global enum ePrimaryWeaponCategory
{
	AR,
	SMG,
	LMG,
	SNIPER,
	SHOTGUN,
	SPECIAL,
	HANDGUN,
	COUNT
}

global enum eSecondaryWeaponCategory
{
	AT,
	PISTOL,
	COUNT
}

global enum eMenuAnimClass
{
	SMALL,
	MEDIUM,
	LARGE,
	CUSTOM
}

global enum ePlayerMovementEvents
{
	JUMP,
	DOUBLE_JUMP,
	DODGE,
	LEAVE_GROUND,
	TOUCH_GROUND,
	MANTLE,
	BEGIN_WALLRUN,
	END_WALLRUN,
	BEGIN_WALLHANG,
	END_WALLHANG
}
/* Valid inputs. Taken from code, pasted here for easy reference
IN_ATTACK
IN_JUMP
IN_DUCK
IN_FORWARD
IN_BACK
IN_USE
IN_PAUSEMENU
IN_LEFT
IN_RIGHT
IN_MOVELEFT
IN_MOVERIGHT
IN_EXIT (Exiting a vehicle)
IN_RELOAD
IN_WEAPON_PICKUP
IN_WEAPON_DISCARD
IN_SPEED (Sprint)
IN_WEAPON_PICKUP_AND_CYCLE
IN_ZOOM (Aim down-sight)
IN_ZOOM_TOGGLE
IN_MELEE
IN_WEAPON_CYCLE
IN_OFFHAND0
IN_OFFHAND1
IN_OFFHAND2
IN_OFFHAND3
IN_OFFHAND4
IN_OFFHAND_QUICK
IN_DUCKTOGGLE
IN_USE_AND_RELOAD
IN_DODGE
IN_VARIABLE_SCOPE_TOGGLE
IN_PING
*/

global enum eUIEvent
{
	MENU_OPEN,
	MENU_CLOSE,
	MENU_SHOW,
	MENU_HIDE,
	MENU_NAVIGATE_BACK,
	//MENU_TAB_CHANGED,
	MENU_INPUT_MODE_CHANGED,
	MENU_GET_TOP_LEVEL,
	MENU_LOSE_TOP_LEVEL,
	PANEL_SHOW,
	PANEL_HIDE,
	PANEL_NAVUP,
	PANEL_NAVDOWN
	PANEL_NAVBACK
}


global const PILOT_WEAPON_MOD_COMMON_COLUMN 							= 0
global const PILOT_WEAPON_MOD_COMMON_TYPE_COLUMN 						= 1
global const PILOT_WEAPON_MOD_COMMON_NAME_COLUMN 						= 2
global const PILOT_WEAPON_MOD_COMMON_DESCRIPTION_COLUMN 				= 4
global const PILOT_WEAPON_MOD_COMMON_IMAGE_COLUMN 						= 5

global const PILOT_WEAPON_MOD_COLUMN 									= 0
global const PILOT_WEAPON_MOD_WEAPON_COLUMN 							= 1
global const PILOT_WEAPON_MOD_DAMAGEDISPLAY_COLUMN 						= 2
global const PILOT_WEAPON_MOD_ACCURACYDISPLAY_COLUMN 					= 3
global const PILOT_WEAPON_MOD_RANGEDISPLAY_COLUMN 						= 4
global const PILOT_WEAPON_MOD_FIRERATEDISPLAY_COLUMN 					= 5
global const PILOT_WEAPON_MOD_CLIPSIZEDISPLAY_COLUMN 					= 6
global const PILOT_WEAPON_MOD_HIDDEN_COLUMN 							= 7

global const TITAN_PRIMARY_COLUMN 										= 0
global const TITAN_PRIMARY_HIDDEN_COLUMN 								= 1

global const TITAN_PRIMARY_MOD_COMMON_COLUMN 							= 0
global const TITAN_PRIMARY_MOD_COMMON_NAME_COLUMN 						= 1
global const TITAN_PRIMARY_MOD_COMMON_DESCRIPTION_COLUMN 				= 2
global const TITAN_PRIMARY_MOD_COMMON_IMAGE_COLUMN 						= 3

global const TITAN_PRIMARY_MOD_COLUMN 									= 0
global const TITAN_PRIMARY_MOD_WEAPON_COLUMN 							= 1
global const TITAN_PRIMARY_MOD_DAMAGEDISPLAY_COLUMN 					= 2
global const TITAN_PRIMARY_MOD_ACCURACYDISPLAY_COLUMN 					= 3
global const TITAN_PRIMARY_MOD_RANGEDISPLAY_COLUMN 						= 4
global const TITAN_PRIMARY_MOD_FIRERATEDISPLAY_COLUMN 					= 5
global const TITAN_PRIMARY_MOD_CLIPSIZEDISPLAY_COLUMN 					= 6
global const TITAN_PRIMARY_MOD_HIDDEN_COLUMN 							= 7

global const TITAN_ABILITY_COLUMN 										= 0
global const TITAN_ABILITY_TYPE_COLUMN 									= 1
global const TITAN_ABILITY_DAMAGESOURCE_COLUMN 							= 2
global const TITAN_ABILITY_HIDDEN_COLUMN 								= 3

global const TITAN_PASSIVE_COLUMN 										= 0
global const TITAN_PASSIVE_TYPE_COLUMN 									= 1
global const TITAN_PASSIVE_NAME_COLUMN 									= 2
global const TITAN_PASSIVE_DESCRIPTION_COLUMN 							= 3
global const TITAN_PASSIVE_LONGDESCRIPTION_COLUMN 						= 4
global const TITAN_PASSIVE_IMAGE_COLUMN 								= 5
global const TITAN_PASSIVE_HIDDEN_COLUMN 								= 6

global const TITAN_VOICE_COLUMN 										= 0
global const TITAN_VOICE_NAME_COLUMN 									= 1
global const TITAN_VOICE_DESCRIPTION_COLUMN 							= 2
global const TITAN_VOICE_IMAGE_COLUMN 									= 3
global const TITAN_VOICE_HIDDEN_COLUMN 									= 4

global const NON_LOADOUT_WEAPON_COLUMN 									= 0

global const int PHYS_EXPLOSION_SMALL 									= 100
global const int PHYS_EXPLOSION_MEDIUM 									= 250
global const int PHYS_EXPLOSION_LARGE 									= 500
global const int PHYS_EXPLOSION_HUGE 									= 10000

global const int TITAN_WEAK 											= 0
global const int TITAN_HENCH 											= 1
global const int TITAN_MERC 											= 2
global const int TITAN_AUTO 											= 3
global const int TITAN_BOSS 											= 4

global const ASPECT_RATIO_16_BY_9										= 16.0/9.0
global const ASPECT_RATIO_21_BY_9										= 64.0/26.5// 21:9 is a marketing term... they like it because it's closer to 16:9, and is better than 64:27
global const ASPECT_RATIO_16_BY_10										= 16.0/10.0

global const float COCKPIT_UI_XOFFSET 									= 22
global const float COCKPIT_UI_WIDTH 									= 41.4
global const float COCKPIT_UI_HEIGHT 									= COCKPIT_UI_WIDTH / 1.7665

// global const float COCKPIT_RUI_WIDTH 									= 100
global const float COCKPIT_RUI_WIDTH 									= 34
global const float COCKPIT_RUI_HEIGHT 									= COCKPIT_RUI_WIDTH / ( 1920.0 / 1080.0 )
// global const vector COCKPIT_RUI_OFFSET 									= <53.6,0,0>
// global const vector COCKPIT_RUI_OFFSET_1610_TEMP 						= <58,0,0>
global const vector COCKPIT_RUI_OFFSET 									= < -218, 0, 0 >
global const vector COCKPIT_RUI_OFFSET_1610_TEMP 						= < -216, 0, 0 >
global const float TITAN_COCKPIT_RUI_SUBDIV 							= 3.5

global const float TITAN_COCKPIT_RUI_SCREEN_WIDTH 						= 21.0
global const float TITAN_COCKPIT_TOPO_RADIUS 							= 150.0
global const float TITAN_COCKPIT_ROTATION_ANGLE 						= 0.0
global const float TITAN_COCKPIT_LOWER_RUI_SCREEN_SQUARE_SIZE 			= 24.0
global const float TITAN_COCKPIT_LOWER_RUI_SCREEN_HEIGHT_SCALE 			= 1.3125
global const float TITAN_COCKPIT_INSTRUMENT1_RUI_SCREEN_SQUARE_SIZE 	= 4.5

global const int NUM_SPOTS_AVAILABLE 					= 20
global const float SPOT_CONE_HEIGHT 					= 8000.0
global const float SPOT_CONE_ANGLE_TO_AXIS 				= 4.5
global const float SPOT_TRACE_DISTANCE 					= MAX_WORLD_RANGE
global const float SPOT_HIGHLIGHT_TIME 					= 5.0
global const float SPOT_HIGHLIGHT_FADE_IN_TIME 			= 0.15
global const float SPOT_HIGHLIGHT_FADE_OUT_TIME 		= 3.0
global const float SPOT_MODEL_SNAPSHOT_TIME 			= 8.0
global const float GROUND_SPOT_VISIBLE_TIME 			= 2.0
global const float SPOT_GLOBAL_VO_COOLDOWN 				= 4.0


global const int RUI_SORT_SCREENFADE 					= 1000
global const int RUI_SORT_GLADCARD 						= 990

global const int TITAN_HINT_DASH 						= 5

global const string CAMO_REF_COLUMN_NAME 				= "itemRef"
global const string CAMO_PILOT_REF_COLUMN_NAME 			= "pilotRef"
global const string CAMO_TITAN_REF_COLUMN_NAME 			= "titanRef"
global const string CAMO_IMAGE_COLUMN_NAME 				= "image"
global const string CAMO_NAME_COLUMN_NAME 				= "name"
global const string CAMO_DESCRIPTION_COLUMN_NAME 		= "description"
global const string CAMO_PILOT_COST_COLUMN_NAME 		= "pilotCost"
global const string CAMO_TITAN_COST_COLUMN_NAME 		= "titanCost"
global const string CAMO_PILOT_WEAPON_COST_COLUMN_NAME 	= "pilotWeaponCost"
global const string CAMO_TITAN_WEAPON_COST_COLUMN_NAME 	= "titanWeaponCost"
global const string CAMO_CATEGORY_COLUMN_NAME 			= "category"

global const int CAMO_INDEX_BASE 			= 0
global const int SKIN_INDEX_BASE 			= 0
global const int PILOT_SKIN_INDEX_CAMO 		= 1
global const int PILOT_SKIN_INDEX_GHOST 	= 1 // In mlt_hero_jack.qc the holo skin should really be the 3rd skin so it and camo never overlaps
global const int TITAN_SKIN_INDEX_CAMO 		= 2
global const int TITAN_WARPAINT_CAMO_INDEX 	= -1
global const int WEAPON_SKIN_INDEX_DEFAULT 	= 0
global const int WEAPON_SKIN_INDEX_CAMO 	= 1
global const int WEAPON_SKIN_INDEX_GHOST 	= 9

global const int HUD_Z_BASE 				= 300

global const int FULLMAP_Z_BASE 			= 600

global const int MINIMAP_Z_BASE 			= 500
global const int MINIMAP_Z_LAYER 			= MINIMAP_Z_BASE + 1
global const int MINIMAP_Z_THREAT_WEDGES 	= MINIMAP_Z_BASE + 2
global const int MINIMAP_Z_YOU 				= MINIMAP_Z_BASE + 200
global const int MINIMAP_Z_FRAME 			= MINIMAP_Z_BASE + 201

global const int MINIMAP_Z_OBJECT 			= 25
global const int MINIMAP_Z_OBJECTIVE 		= 50
global const int MINIMAP_Z_PING				= 60
global const int MINIMAP_Z_NPC 				= 75
global const int MINIMAP_Z_PLAYER 			= 100

// must match values in global_defs.rui
global const int IMAGE_ATLAS_MENU 			= 0
global const int IMAGE_ATLAS_HUD 			= 1
global const int IMAGE_ATLAS_COMMS 			= 3

// Must match values in ajax_cockpit.rui ( two locations )
global const float COCKPIT_COLOR_BLUE 		= 0.0
global const float COCKPIT_COLOR_YELLOW 	= 0.05
global const float COCKPIT_COLOR_RED 		= 0.15
global const float COCKPIT_COLOR_SIEGE 		= 0.25
global const float COCKPIT_COLOR_THREAT 	= 0.35
global const float COCKPIT_COLOR_HIDDEN 	= 0.45
global const float COCKPIT_COLOR_VANGUARD 	= 0.55

// Achievements/Trophys
global enum achievements
{
	PLAYER_LEVEL = 0, 	//REACH LEVEL 50 	= 1
	DECKED_OUT, 		//EQUIP A TIER 4 HELMET AND BODY ARMOR
	RESPAWN_TEAMMATE, 	//RESPAWN A TEAMMATE
	FULLY_KITTED, 		//EQUIP A LEGENDARY CHARACTER OR WEAPON SKIN
	JUMPMASTER, 		//BE THE JUMPMASTER 5 TIMES
	WELL_ROUNDED, 		//DEAL 5000 DAMAGE WITH 8 DIFFERENT LEGENDS
	KILL_LEADER, 		//BECOME THE KILL LEADER
	APEX_OFFENSE, 		//WIN A GAME AS AN OFFENSIVE CHARACTER
	APEX_DEFENSE, 		//WIN A GAME AS A DEFENSIVE CHARACTER
	APEX_SUPPORT, 		//WIN A GAME AS A SUPPORT CHARACTER
	APEX_RECON, 		//WIN A GAME AS A RECON CHARACTER
	APEX_LEGEND, 		//WIN A GAME WITH 8 DIFFERENT LEGENDS
	MAX_ACHIVEMENTS
}

global enum eFDDifficultyLevel
{
	EASY,
	NORMAL,
	HARD,
	MASTER,
	INSANE,
}

global enum eLaunchState
{
	WORKING,
	WAIT_TO_CONTINUE,
	CANT_CONTINUE
}

global enum eLaunching
{
	FALSE,
	MULTIPLAYER,
	MULTIPLAYER_INVITE,
	COUNT
}

global struct Friend
{
	string id
	string hardware
	string name
	string presence
	int status
	bool ingame
	bool inparty
	bool away
}

global struct FriendsData
{
	array<Friend> friends
	bool isValid
}

global enum eFriendStatus
{
	ONLINE_INGAME,
	ONLINE,
	ONLINE_AWAY,
	OFFLINE,
	COUNT
}

#if UI
global const bool MENU_NAV_FORWARD = true
global const bool MENU_NAV_BACK = false
#endif

global const int WEAPONFLAG_AMPED	= (1<<0)
global const int WEAPONFLAG_ATTACHMENT_BARREL	= (1<<1)
global const int WEAPONFLAG_ATTACHMENT_GRIP		= (1<<2)
global const int WEAPONFLAG_ATTACHMENT_SIGHT	= (1<<3)
global const int WEAPONFLAG_ATTACHMENT_MAG		= (1<<4)

global const string PERSISTENCE_LEAVECOUNT_VAR 	= "abandonCountForMode"
global const string PERSISTENCE_LEAVELIFETIMECOUNT_VAR = "abandonLifetimeCount"
global const string PERSISTENCE_LAST_LEAVE_TIME = "lastAbandonTime"
global const string PERSISTENCE_LEAVEMODE_VAR 	= "lastAbandonedMode"

// LEECHING
global const DATA_KNIFE_MODEL 			= $"mdl/weapons/data_knife/v_data_knife.rmdl"

global const asset CONTROL_PANEL_MODEL 	= $"mdl/communication/terminal_usable_imc_01.rmdl"
global const asset RODEO_BATTERY_MODEL 	= $"mdl/titans/medium/titan_medium_battery_static.rmdl"
global const asset MODEL_GENERATOR 		= $"mdl/beacon/charge_generator_01_glass.rmdl"

global const float PHASE_TUNNEL_PLACEMENT_DURATION = 10.0

global struct UseFuncData
{
	entity useEnt
	void functionref( entity, entity, entity ) useFunc
}

global enum eHitType
{
	NORMAL
	CRIT,
	INEFFECTIVE,
	MID_RANGE,
	SHIELD,
	ARMOR,
	VORTEX,
	SHADOW,
	OVERSHIELD,
}

global const vector OVERSHIELD_COLOR = <19, 207, 69>

global const int DAMAGEFLAG_ARMOR1 = 64
global const int DAMAGEFLAG_ARMOR2 = 128
global const int DAMAGEFLAG_ARMOR3 = 256
global const int DAMAGEFLAG_ARMOR4 = 512

global enum eCommsAction
{
	BLANK = 0,

	PING_WEAPON_KRABER,
	PING_WEAPON_MASTIFF,
	PING_WEAPON_LSTAR,
	PING_WEAPON_ENERGY_AR,
	PING_WEAPON_DEVOTION,
	PING_WEAPON_TRIPLETAKE,
	PING_WEAPON_FLATLINE,
	PING_WEAPON_HEMLOK,
	PING_WEAPON_G7,
	PING_WEAPON_ALTERNATOR,
	PING_WEAPON_R97,
	PING_WEAPON_PROWLER,
	PING_WEAPON_DMR,
	PING_WEAPON_SPITFIRE,
	PING_WEAPON_R201,
	PING_WEAPON_EVA,
	PING_WEAPON_PEACEKEEPER,
	PING_WEAPON_MOZAMBIQUE,
	PING_WEAPON_WINGMAN,
	PING_WEAPON_SEMIPISTOL,
	PING_WEAPON_AUTOPISTOL,
	PING_WEAPON_DEFENDER,
	PING_WEAPON_VOLT,
	PING_WEAPON_ARCHER,
	PING_WEAPON_SOFTBALL,
	PING_WEAPON_SMR,
	PING_WEAPON_EPG,
	PING_WEAPON_WINGMAN_ELITE,
	PING_WEAPON_SMART_PISTOL,
	PING_WEAPON_SENTINEL,
	PING_WEAPON_THROWINGKNIFE,
	PING_WEAPON_SHEILA_HMG,
	PING_WEAPON_CAR,

	//
	PING_OFFHAND_GRENADE_FIRESTAR,
	PING_OFFHAND_GRENADE_FRAG,
	PING_OFFHAND_GRENADE_ARC,
	PING_OFFHAND_GRENADE_GRAV,

	//
	PING_AMMO_BULLET,
	PING_AMMO_SPECIAL,
	PING_AMMO_SHOTGUN,
	PING_AMMO_HIGHCAL,
	PING_AMMO_SNIPER,
	PING_AMMO_EXPLOSIVE
	//
	PING_EQUIPMENT_ARMOR_1,
	PING_EQUIPMENT_ARMOR_2,
	PING_EQUIPMENT_ARMOR_3,
	PING_EQUIPMENT_ARMOR_4,
	PING_EQUIPMENT_HELMET_1,
	PING_EQUIPMENT_HELMET_2,
	PING_EQUIPMENT_HELMET_3,
	PING_EQUIPMENT_HELMET_4,
	PING_EQUIPMENT_BACKPACK_1,
	PING_EQUIPMENT_BACKPACK_2,
	PING_EQUIPMENT_BACKPACK_3,
	PING_EQUIPMENT_BACKPACK_4,
	PING_EQUIPMENT_INCAPSHIELD_1,
	PING_EQUIPMENT_INCAPSHIELD_2,
	PING_EQUIPMENT_INCAPSHIELD_3,
	PING_EQUIPMENT_INCAPSHIELD_4,
	//
	PING_ATTACHMENT_OPTIC_CQ_HCOG_1,
	PING_ATTACHMENT_OPTIC_CQ_HCOG_2,
	PING_ATTACHMENT_OPTIC_CQ_HOLOSIGHT_1,
	PING_ATTACHMENT_OPTIC_CQ_HOLOSIGHT_2,
	PING_ATTACHMENT_OPTIC_CQ_THREAT,
	PING_ATTACHMENT_OPTIC_RANGED_HCOG,
	PING_ATTACHMENT_OPTIC_RANGED_AOG,
	PING_ATTACHMENT_OPTIC_SNIPER,
	PING_ATTACHMENT_OPTIC_SNIPER_VARIABLE,
	PING_ATTACHMENT_OPTIC_SNIPER_THREAT,
	//
	PING_ATTACHMENT_MAG_BULLET_1,
	PING_ATTACHMENT_MAG_BULLET_2,
	PING_ATTACHMENT_MAG_BULLET_3,
	PING_ATTACHMENT_MAG_HIGHCAL_1,
	PING_ATTACHMENT_MAG_HIGHCAL_2,
	PING_ATTACHMENT_MAG_HIGHCAL_3,
	PING_ATTACHMENT_MAG_ENERGY_1,
	PING_ATTACHMENT_MAG_ENERGY_2,
	PING_ATTACHMENT_MAG_ENERGY_3,
	//
	PING_ATTACHMENT_SHOTGUN_BOLT_1,
	PING_ATTACHMENT_SHOTGUN_BOLT_2,
	PING_ATTACHMENT_SHOTGUN_BOLT_3,
	PING_ATTACHMENT_SHOTGUN_BOLT_4,
	//
	PING_ATTACHMENT_STOCK_STANDARD_1,
	PING_ATTACHMENT_STOCK_STANDARD_2,
	PING_ATTACHMENT_STOCK_STANDARD_3,
	PING_ATTACHMENT_STOCK_SNIPER_1,
	PING_ATTACHMENT_STOCK_SNIPER_2,
	PING_ATTACHMENT_STOCK_SNIPER_3,
	PING_ATTACHMENT_STOCK_SNIPER_4,
	//
	PING_ATTACHMENT_BARREL_STABILIZER_1,
	PING_ATTACHMENT_BARREL_STABILIZER_2,
	PING_ATTACHMENT_BARREL_STABILIZER_3,
	PING_ATTACHMENT_BARREL_STABILIZER_4_FLASH_HIDER,
	//
	PING_ATTACHMENT_HOPUP_TURBOCHARGER,
	PING_ATTACHMENT_HOPUP_SELECTFIRE,
	PING_ATTACHMENT_HOPUP_ENERGY_CHOKE,
	PING_ATTACHMENT_HOPUP_HEADSHOT_DMG,
	PING_ATTACHMENT_HOPUP_SHIELD_BREAKER,
	PING_ATTACHMENT_HOPUP_UNSHIELDED_DMG,
	PING_ATTACHMENT_HOPUP_HIGHCAL_ROUNDS,
	PING_ATTACHMENT_HOPUP_DOUBLE_TAP,
	//
	PING_ITEM_COMBO_FULL,
	PING_ITEM_SHIELD_SMALL,
	PING_ITEM_SHIELD_LARGE,
	PING_ITEM_HEALTH_SMALL,
	PING_ITEM_HEALTH_MEDIUM,
	PING_ITEM_HEALTH_LARGE,
	PING_ITEM_HEALTH_SYRINGE,
	PING_ITEM_ULTIMATE_ENERGY,
	PING_ITEM_ARMOR_SMALL,
	PING_ITEM_DATA_KNIFE,
	FLAVOR_ITEM_DATA_KNIFE,
	//
	PING_LOOT_DRONE,
	PING_LOOT_ROLLER,
	//
	PING_LOOT_VAULT,
	PING_LOOT_VAULT_OPEN,
	PING_LOOT_VAULT_REVEAL,
	PING_LOOT_VAULT_HAS_KEY_SQUAD,
	PING_LOOT_VAULT_HAS_KEY_SELF,
	SUB_TYPE_VAULT_KEY_NEED,
	SUB_TYPE_VAULT_KEY_HAS_SQUAD,
	SUB_TYPE_VAULT_KEY_HAS_SELF,
	//
	PING_MAP_WAYPOINT,
	//
	PING_LOCATION,
	PING_DROP_SUGGESTION,
	PING_WE_GO,
	PING_I_GO,
	PING_I_WATCHING,
	PING_I_LOOTING,
	PING_I_DEFENDING,
	PING_I_ATTACKING,
	PING_NEED_HEALTH,
	PING_HOLD_ON,
	//
	PING_ABILITY_ME,
	PING_ABILITY_ALLY,
	PING_AREA_CLEAR,
	PING_AREA_VISITED,
	PING_DOOR,
	PING_DEATHBOX,
	PING_LOOTBIN,
	PING_LOOTBIN_OPEN,
	PING_CAREPACKAGE,
	PING_MY_CAREPACKAGE,
	PING_SURVEYBEACON,
	PING_HOVERTANK,
	PING_FLYER,
	PING_FLYER_CAGED,
	PING_JUMPTOWER,
	PING_ZIPLINE,
	PING_ENEMY_SPOTTED_GENERAL,
	PING_ENEMY_SPOTTED_SPECIFIC,
	PING_ENEMY_SUSPECTED,
	//
	PING_ENEMY_NPC_SNIPER,
	PING_ENEMY_NPC_SPECTRE,
	PING_ENEMY_NPC_STALKER,
	PING_ENEMY_NPC_REAPER,
	PING_ENEMY_NPC_TITAN,
	PING_ENEMY_NPC_DRONE,
	PING_ENEMY_NPC_TICK,
	PING_ENEMY_NPC_INFECTED,
	PING_ENEMY_NPC_SPIDER,
	PING_ENEMY_NPC_PROWLER,
	PING_ENEMY_NPC_GOLIATH,
	PING_ENEMY_NPC_GUNSHIP,
	PING_ENEMY_NPC_TURRET,
	//
	PING_NPC_LOOT_TICK,
	//
	PING_ENEMY_TRAP,
	PING_ENEMY_TESLA_TRAP,
	PING_TROPHY_SYSTEM,
	PING_ENEMY_SMOKE,
	PING_ENEMY_SHIELD,
	PING_ENEMY_TELEPORTER,
	//
	PING_FRIENDLY_TRAP,
	PING_FRIENDLY_SHIELD,
	PING_FRIENDLY_TELEPORTER,
	PING_FRIENDLY_HEALTH,
	//
	PING_RESPAWN_STATION,
	PING_RESPAWN_DROPSHIP,
	PING_JUMP_PAD,
	PING_CRYPTO_DRONE,
	PING_GEYSER,
	PING_LAVA,
	PING_TRAIN,
	PING_TRAIN_AT_STATION,
	//
	CANCELED_PING,
	//
	REPLY_JOIN,
	REPLY_YES,
	REPLY_NO,
	REPLY_THANKS,
	REPLY_WELCOME,
	REPLY_I_CANNOT,
	REPLY_LOOT_DIBS,
	REPLY_LOOT_UNDIBS,
	REPLY_BLEEDOUT_YES,
	REPLY_BLEEDOUT_NO,
	REPLY_BLEEDOUT_COMETOME,
	REPLY_RESPAWN_YES,
	//
	QUICKCHAT_CELEBRATE,
	QUICKCHAT_GG,
	QUICKCHAT_INTRO_QUIP,
	QUICKCHAT_KILL_QUIP,
	QUICKCHAT_NICE,
	QUICKCHAT_THANKS,
	QUICKCHAT_WAIT,
	QUICKCHAT_WHAT_NOW,
	QUICKCHAT_READY,
	QUICKCHAT_STICK_TOGETHER,
	QUICKCHAT_COVER_ME,
	//
	QUICKCHAT_BLEEDOUT_HELP,
	QUICKCHAT_BLEEDOUT_THANKS,
	QUICKCHAT_BLEEDOUT_ITS_OVER,
	//
	INVENTORY_NEED_AMMO_BULLET,
	INVENTORY_NEED_AMMO_SPECIAL,
	INVENTORY_NEED_AMMO_HIGHCAL,
	INVENTORY_NEED_AMMO_SHOTGUN,
	INVENTORY_NEED_AMMO_SNIPER,
	INVENTORY_NEED_AMMO_EXPLOSIVE,
	INVENTORY_NEED_FIRST_WEAPON,
	INVENTORY_NEED_ANOTHER_WEAPON,
	INVENTORY_NEED_ARMOR,
	INVENTORY_NEED_HELMET,
	INVENTORY_NEED_BACKPACK,
	INVENTORY_NEED_HEALTH,
	INVENTORY_NEED_SHIELDS,
	INVENTORY_NEED_INCAPSHIELD,

	INVENTORY_NEED_ATTACHMENT_MAG_BULLET,
	INVENTORY_NEED_ATTACHMENT_MAG_SPECIAL,
	INVENTORY_NEED_ATTACHMENT_MAG_SHOTGUN,
	INVENTORY_NEED_ATTACHMENT_MAG_HIGHCAL,
	INVENTORY_NEED_ATTACHMENT_MAG_SNIPER,
	INVENTORY_NEED_ATTACHMENT_MAG_EXPLOSIVE,

	INVENTORY_NEED_ATTACHMENT_SIGHT_PISTOL,
	INVENTORY_NEED_ATTACHMENT_SIGHT_SMG,
	INVENTORY_NEED_ATTACHMENT_SIGHT_ASSAULT,
	INVENTORY_NEED_ATTACHMENT_SIGHT_LMG,
	INVENTORY_NEED_ATTACHMENT_SIGHT_SHOTGUN,
	INVENTORY_NEED_ATTACHMENT_SIGHT_SNIPER,

	INVENTORY_NEED_ATTACHMENT_GRIP_PISTOL,
	INVENTORY_NEED_ATTACHMENT_GRIP_SMG,
	INVENTORY_NEED_ATTACHMENT_GRIP_ASSAULT,
	INVENTORY_NEED_ATTACHMENT_GRIP_LMG,
	INVENTORY_NEED_ATTACHMENT_GRIP_SHOTGUN,
	INVENTORY_NEED_ATTACHMENT_GRIP_SNIPER,

	INVENTORY_NEED_ATTACHMENT_BARREL_PISTOL,
	INVENTORY_NEED_ATTACHMENT_BARREL_SMG,
	INVENTORY_NEED_ATTACHMENT_BARREL_ASSAULT,
	INVENTORY_NEED_ATTACHMENT_BARREL_LMG,
	INVENTORY_NEED_ATTACHMENT_BARREL_SHOTGUN,
	INVENTORY_NEED_ATTACHMENT_BARREL_SNIPER,

	INVENTORY_NEED_WEAPONATTACHMENT_HOPUP,
	INVENTORY_NEED_HOPUP_CHOKE,
	INVENTORY_NEED_HOPUP_SELECTFIRE,
	INVENTORY_NEED_HOPUP_TURBOCHARGER,
	INVENTORY_NEED_HOPUP_SKULLPIERCER,
	INVENTORY_NEED_HOPUP_DISRUPTOR,
	INVENTORY_NEED_HOPUP_HAMMERPOINT,
	//
	LOOTWHEEL_HEALTH_SMALL,
	LOOTWHEEL_HEALTH_MEDIUM,
	LOOTWHEEL_HEALTH_LARGE,
	LOOTWHEEL_HEALTH_SYRINGE,
	LOOTWHEEL_HEALTH_ULTIMATE,
	LOOTWHEEL_HEALTH_ARMOR_SMALL,

	WRAITH_WARN_TRAPS,
	WRAITH_WARN_BOMBS,
	WRAITH_WARN_PING,
	WRAITH_WARN_KILLZONE,
	WRAITH_WARN_WATCHED,
	WRAITH_WARN_SEES_PLAYER,
	WRAITH_WARN_SNIPER,
	WRAITH_WARN_HOSTILES,
	WRAITH_WARN_GRENADE,
	WRAITH_WARN_SURROUNDED,

	BLOOHOUND_WARN_TRAVELER,
	BLOOHOUND_WARN_TRAVELER_RECENT,
	BLOOHOUND_WARN_BATTLE,
	BLOOHOUND_WARN_BATTLE_RECENT,
	BLOOHOUND_WARN_LOOTING,
	BLOOHOUND_WARN_LOOTING_RECENT,
	BLOOHOUND_WARN_WOUNDED,
	BLOOHOUND_WARN_WOUNDED_RECENT,

	//
	SPAWN_WORMHOLE,
	SPAWN_DRONEMEDIC,

	//
	SPAWN_EVAC_SHIP,
	SPAWN_EVAC_ZONE,
	SHADOWFALL_NEMESIS,
	SHADOWFALL_LEGEND_DEATH,
	SHADOWFALL_SHADOW_DEATH,
	//
	SUB_TYPE_LEVEL1,
	SUB_TYPE_LEVEL2,
	SUB_TYPE_LEVEL3,
	SUB_TYPE_LEVEL4,
	SUB_TYPE_FULLYKITTED,
	SUB_TYPE_RANGECLOSE,
	SUB_TYPE_RANGEMID,
	SUB_TYPE_RANGEFAR,
	SUB_TYPE_RANGESNIPER,
	SUB_TYPE_CHOKE,
	SUB_TYPE_SELECTFIRE,
	SUB_TYPE_TURBOCHARGER,
	SUB_TYPE_SKULLPIERCER,
	SUB_TYPE_DISRUPTOR,
	SUB_TYPE_HAMMERPOINT,
	//
	FLAVOR_WEAPON_KRABER,
	FLAVOR_WEAPON_MASTIFF,
	FLAVOR_WEAPON_LSTAR,
	FLAVOR_WEAPON_ENERGY_AR,
	FLAVOR_WEAPON_DEVOTION,
	FLAVOR_WEAPON_TRIPLETAKE,
	FLAVOR_WEAPON_FLATLINE,
	FLAVOR_WEAPON_HEMLOK,
	FLAVOR_WEAPON_G7,
	FLAVOR_WEAPON_ALTERNATOR,
	FLAVOR_WEAPON_R97,
	FLAVOR_WEAPON_PROWLER,
	FLAVOR_WEAPON_DMR,
	FLAVOR_WEAPON_SPITFIRE,
	FLAVOR_WEAPON_R201,
	FLAVOR_WEAPON_EVA,
	FLAVOR_WEAPON_PEACEKEEPER,
	FLAVOR_WEAPON_MOZAMBIQUE,
	FLAVOR_WEAPON_WINGMAN,
	FLAVOR_WEAPON_SEMIPISTOL,
	FLAVOR_WEAPON_AUTOPISTOL,
	FLAVOR_OFFHAND_GRENADE_FIRESTAR,
	FLAVOR_OFFHAND_GRENADE_FRAG,
	FLAVOR_OFFHAND_GRENADE_ARC,
	FLAVOR_AMMO_SPECIAL,
	FLAVOR_AMMO_SHOTGUN,
	FLAVOR_EQUIPMENT_ARMOR_1,
	FLAVOR_EQUIPMENT_ARMOR_2,
	FLAVOR_EQUIPMENT_ARMOR_3,
	FLAVOR_EQUIPMENT_ARMOR_4,
	FLAVOR_EQUIPMENT_HELMET_1,
	FLAVOR_EQUIPMENT_HELMET_2,
	FLAVOR_EQUIPMENT_HELMET_3,
	FLAVOR_EQUIPMENT_HELMET_4,
	FLAVOR_EQUIPMENT_INCAPSHIELD_1,
	FLAVOR_EQUIPMENT_INCAPSHIELD_2,
	FLAVOR_EQUIPMENT_INCAPSHIELD_3,
	FLAVOR_EQUIPMENT_INCAPSHIELD_4,
	FLAVOR_ATTACHMENT_OPTIC_CQ_HCOG_1,
	FLAVOR_ATTACHMENT_OPTIC_CQ_HCOG_2,
	FLAVOR_ATTACHMENT_OPTIC_CQ_HOLOSIGHT_1,
	FLAVOR_ATTACHMENT_OPTIC_CQ_HOLOSIGHT_2,
	FLAVOR_ATTACHMENT_OPTIC_CQ_THREAT,
	FLAVOR_ATTACHMENT_OPTIC_RANGED_HCOG,
	FLAVOR_ATTACHMENT_OPTIC_RANGED_AOG,
	FLAVOR_ATTACHMENT_OPTIC_SNIPER,
	FLAVOR_ATTACHMENT_OPTIC_SNIPER_VARIABLE,
	FLAVOR_ATTACHMENT_OPTIC_SNIPER_THREAT,
	FLAVOR_ATTACHMENT_MAG_BULLET_1,
	FLAVOR_ATTACHMENT_MAG_BULLET_2,
	FLAVOR_ATTACHMENT_MAG_BULLET_3,
	FLAVOR_ATTACHMENT_MAG_HIGHCAL_1,
	FLAVOR_ATTACHMENT_MAG_HIGHCAL_2,
	FLAVOR_ATTACHMENT_MAG_HIGHCAL_3,
	FLAVOR_ATTACHMENT_SHOTGUN_BOLT_1,
	FLAVOR_ATTACHMENT_SHOTGUN_BOLT_2,
	FLAVOR_ATTACHMENT_SHOTGUN_BOLT_3,
	FLAVOR_ATTACHMENT_STOCK_STANDARD_1,
	FLAVOR_ATTACHMENT_STOCK_STANDARD_2,
	FLAVOR_ATTACHMENT_STOCK_STANDARD_3,
	FLAVOR_ATTACHMENT_STOCK_SNIPER_1,
	FLAVOR_ATTACHMENT_STOCK_SNIPER_2,
	FLAVOR_ATTACHMENT_STOCK_SNIPER_3,
	FLAVOR_ATTACHMENT_BARREL_STABILIZER_1,
	FLAVOR_ATTACHMENT_BARREL_STABILIZER_2,
	FLAVOR_ATTACHMENT_BARREL_STABILIZER_3,
	FLAVOR_ATTACHMENT_BARREL_STABILIZER_4_FLASH_HIDER,
	FLAVOR_ATTACHMENT_HOPUP_TURBOCHARGER,
	FLAVOR_ATTACHMENT_HOPUP_SELECTFIRE,
	FLAVOR_ATTACHMENT_HOPUP_ENERGY_CHOKE,
	FLAVOR_ATTACHMENT_HOPUP_HEADSHOT_DMG,
	FLAVOR_ITEM_COMBO_FULL,
	FLAVOR_ITEM_HEALTH_SMALL,
	FLAVOR_ITEM_HEALTH_MEDIUM,
	FLAVOR_ITEM_HEALTH_LARGE,
	FLAVOR_ITEM_HEALTH_SYRINGE,
	FLAVOR_ITEM_ULTIMATE_ENERGY,
	FLAVOR_EQUIPMENT_BACKPACK_1,
	FLAVOR_EQUIPMENT_BACKPACK_2,
	FLAVOR_EQUIPMENT_BACKPACK_3,
	FLAVOR_EQUIPMENT_BACKPACK_4,

	QUIP,

	_count
}

global const string BUBBLE_SHIELD_SCRIPTNAME            = "bubble_shield"
global const string CARE_PACKAGE_SCRIPTNAME             = "care_package"
global const string CARE_PACKAGE_TARGETNAME             = "care_package"
global const string CARE_PACKAGE_LIFELINE_TARGETNAME    = "care_package_lifeline"
global const string SURVEY_BACON_SCRIPTNAME             = "survey_beacon"
global const string REVIVE_SHIELD_SCRIPTNAME            = "revive_shield"
global const string JUMP_PAD_TARGETNAME                 = "jump_pad"
global const string TRAIN_BRUSH_SCRIPTNAME              = "train_brush"
global const string GEYSER_PING_SCRIPT_NAME             = "ping_geyser"
global const string LAVA_FLOW_SURFACE_NAME              = "lava_flow"

global const string CARE_PACKAGE_PROXY                  = "care_package_proxy"

global enum eToolTipFlag
{
	// must match TOOLTIP_FLAG_* in tooltips.rui
	EMPTY_SLOT = (1 << 0),
	CLIENT_UPDATE = (1 << 1),
	INSTANT_FADE_IN = (1 << 2),
	SOLID = (1 << 3),
	PING_DISSABLED = (1 << 4),
}

global enum eTooltipStyle
{
	DEFAULT,
	LOOT_PROMPT,
	WEAPON_LOOT_PROMPT,
	BUTTON_PROMPT,
	ACCESSIBLE,
	CURRENCY,
}

global struct LootTooltipData
{
	int index
	int guid
	int count
	int lootContext
	int property = -1
	bool isPinged
	bool isPingedByUs
	array<string> mods
}

global struct ToolTipData
{
	asset image

	string titleText
	string descText

	string actionHint1
	string actionHint2
	string actionHint3

	string commsPromptDefault
	int commsAction = eCommsAction.BLANK

	int tooltipFlags
	int tooltipStyle = eTooltipStyle.DEFAULT

	LootTooltipData &lootPromptData
}


global const bool HAS_TOOLTIPS = true

global const MINIMAP_UID_COORDS_RUI		= $"ui/minimap_square_coords.rpak"					// north facing implemented
global const MINIMAP_BASE_RUI			= $"ui/minimap_square_base.rpak"					// north facing implemented
global const MINIMAP_FRAME_RUI			= $"ui/minimap_square_frame.rpak"
global const MINIMAP_YOU_RUI			= $"ui/minimap_square_you.rpak"						// north facing implemented
global const MINIMAP_JAMMER_LAYER_RUI	= $"ui/minimap_square_jammer_layer.rpak"			// north facing implemented
global const MINIMAP_OBJECT_RUI			= $"ui/minimap_square_object.rpak"					// north facing implemented
global const MINIMAP_PLAYER_RUI			= $"ui/minimap_square_player.rpak"					// north facing implemented
global const MINIMAP_RING_PULSE_RUI		= $"ui/minimap_square_ring_pulse.rpak"				// north facing implemented
global const MINIMAP_SQUARE_SIMPLE_RUI	= $"ui/minimap_square_simple.rpak"					// north facing implemented
global const MINIMAP_OBJ_AREA_RUI		= $"ui/minimap_square_obj_area.rpak"				// north facing implemented
global const MINIMAP_ARC_TRAP_RUI		= $"ui/minimap_square_arc_trap.rpak"				// north facing implemented
global const MINIMAP_OBJECTIVE_AREA_RUI	= $"ui/minimap_square_objective_area.rpak"			// north facing implemented
#if MP_PVEMODE
global const MINIMAP_PVE_TARGETNPC_RUI	= $"ui/minimap_square_pve_targetnpc.rpak"			// north facing implemented
#endif

global enum eAllegiance
{
	IRRELEVANT,
	FRIENDLY_ONLY,
	ENEMY_ONLY,
}

global enum eValidation
{
	DONT_ASSERT,
	ASSERT,
}

global const int REALM_COUNT = 32
global enum eRealms
{
	// Default realm for players in the match
	DEFAULT 					= 0,
	PROTO_ABILITY_HAUNT = 1,

	//----------------------
	// STAGING AREA REALMS
	//----------------------

	// We need to reserve realms for players in the staging area. Each player is in 2 player realms, one for just your squad so things like ultimates are
	// only seen by your squad, and also in one of a few common realms with other squads on the server so we see some of the other players running around.
	// In a 60 man, 3 player squads game we need the following number of slots:
	// 60 players / 15 players per common realm = 4 common slots
	// 60 players / 3 players per squad = 20 squad slots
	//   24 realm slots total needed
	//   more realms may be needed for playlists with smaller squads
	STAGING_REALM_PLAYERS_START = 2,
	STAGING_REALM_PLAYERS_END	= 63,

	_count = REALM_COUNT
}

global const bool HAS_AUTOPICKUP_STACKABLE_ITEMS = false
global const bool HAS_FIRST_PERSON_SPECTATE = true
global const bool HAS_ENEMY_NAMES_OVERHEAD = false
global const bool HAS_HUD_V2 = true

global const asset SURVIVAL_HUD_DPAD_RUI	= $"ui/survival_dpad_hud_v2.rpak"
global const asset SURVIVAL_HUD_WEAPON_RUI	= $"ui/weapon_hud_v2.rpak"
global const asset SURVIVAL_HUD_PLAYER		= $"ui/survival_player_hud_v2.rpak"

global const string HUD_SETTING_LOOTPROMPTSTYLE = "hud_setting_showMedals" // TODO: get a real convar for this

global enum eLootPromptStyle
{
	COMPACT,
	DEFAULT,
	_COUNT
}

global const asset LOOT_PICKUP_HINT_DEFAULT_RUI		= $"ui/loot_pickup_hint_v2.rpak"
global const asset LOOT_PICKUP_HINT_COMPACT_RUI		= $"ui/loot_pickup_hint_compact.rpak"
global const asset WEAPON_PICKUP_HINT_DEFAULT_RUI	= $"ui/loot_pickup_hint_weapon.rpak"
global const asset WEAPON_PICKUP_HINT_COMPACT_RUI	= $"ui/loot_pickup_hint_weapon_compact.rpak"

global const int SURVIVAL_BACKPACK_LIMIT = 8
global const int SURVIVAL_BACKPACK_LIMIT_SMALL = 10
global const int SURVIVAL_BACKPACK_LIMIT_MEDIUM = 12
global const int SURVIVAL_BACKPACK_LIMIT_MAX = 14

global const int DEBUG_BULLET_DROP = 0

// these should match the ones used by RUIs -> teamMemberColors[idx]
global const vector MEMBER_COLOR1 = <245, 165, 35> //old <50, 158, 255>
global const vector MEMBER_COLOR2 = <125, 175, 10> //old <68, 216, 17>
global const vector MEMBER_COLOR3 = <10, 180, 180> //old <208, 215, 6>
global const vector MEMBER_COLOR4 = <150, 95, 215> //old <153, 6, 215>

global enum eQuality
{
	COMMON,
	RARE,
	EPIC,
	LEGENDARY,
	HEIRLOOM,
	_COUNT,
}

global const int OBIT_FLAG_HEADSHOT = 1 << 0
global const int OBIT_FLAG_DOWNED = 1 << 1

// These are the base colors - possibly not bright and saturated enough for the fill effect
//	global const vector AMMO_SHOTGUN_COLOR = <120, 37, 8> / 255.0
//	global const vector AMMO_ENERGY_COLOR = <132, 160, 61> / 255.0
//	global const vector AMMO_SMALL_COLOR = <137, 99, 63> / 255.0
//	global const vector AMMO_LARGE_COLOR = <76, 120, 105> / 255.0

// Brighter and more saturated versions of the ones above - except for energy
global const vector AMMO_SHOTGUN_COLOR 		= <155, 51, 15> / 255.0
global const vector AMMO_ENERGY_COLOR 		= <132, 160, 61> / 255.0
global const vector AMMO_SMALL_COLOR 		= <180, 123, 68> / 255.0
global const vector AMMO_LARGE_COLOR 		= <84, 155, 131> / 255.0
global const vector AMMO_SNIPER_COLOR 		= <74.0, 73.0, 147.0> / 255.0
global const vector AMMO_EXPLOSIVE_COLOR 	= <163.0, 93.0, 72.0> / 255.0

global const vector AMMO_LEGENDARY_COLOR 	= <255, 215, 30> / 255.0

global const table<string, vector> ammoColors = {
	bullet = AMMO_SMALL_COLOR
	special = AMMO_ENERGY_COLOR
	shotgun = AMMO_SHOTGUN_COLOR
	highcal = AMMO_LARGE_COLOR
	sniper = AMMO_SNIPER_COLOR
	explosive = AMMO_EXPLOSIVE_COLOR
}

global struct BurnDamageSettings
{
	int 	damageSourceID
	float 	preburnDuration
	float 	burnDuration
	int 	burnDamage
	float 	burnTime
	float 	burnTickRate
	float 	burnStackDebounce
	int 	burnStacksMax
	float 	burnDamageRadius
	float 	burnDamageHeight
	string 	soundBurnDamageTick_1P
	float 	segmentSpacingDist
	string 	soundBurnSegmentStart
	string 	soundBurnSegmentMiddle
	string 	soundBurnSegmentEnd
}

global struct BurnDamageStack
{
	entity 	owner
	entity 	inflictor
	int 	damageDealt 	= 0
	float 	tickInterval 	= -1
	int 	damagePerTick 	= 0
	float 	startTime 		= -1
	float 	endTime 		= -1
	float 	lastDamageTime 	= -1

	BurnDamageSettings &burnSettings
}

global int PLAYER_STRYDER_CHAR_DATA_ARRAY_VERSION = 0 // be careful changing this

global enum ePlayerStryderCharDataArraySlots
{
	INVALID = -1,
	VERSION = 0,
	UNUSED01,
	CHARACTER,
	CHARACTER_SKIN,
	BANNER_FRAME,
	BANNER_STANCE,
	BANNER_BADGE1,
	BANNER_BADGE1_TIER,
	BANNER_BADGE2,
	BANNER_BADGE2_TIER,
	BANNER_BADGE3,
	BANNER_BADGE3_TIER,
	BANNER_TRACKER1,
	BANNER_TRACKER1_VALUE,
	BANNER_TRACKER2,
	BANNER_TRACKER2_VALUE,
	BANNER_TRACKER3,
	BANNER_TRACKER3_VALUE,
	CHARACTER_INTRO_QUIP,
	UNUSED19,
	UNUSED20,
	UNUSED21,
	UNUSED22,
	ACCOUNT_LEVEL,
	ACCOUNT_PROGRESS_INT,
	UNUSED25, // Time played (drew)
	UNUSED26, // Matches played (drew)
	UNUSED27, // Wins (drew)
	UNUSED28, // Total Kills (drew)
	UNUSED29,
	UNUSED30,
	PLAYER_IN_MATCH,
	COUNT,
}
Assert( ePlayerStryderCharDataArraySlots.COUNT == 32 )


// ===============================================================================
//  don't put anything referenced by preprocessor defines after this block
// ===============================================================================
// references to variables that are defined in the game code should be at the end
// ===============================================================================
global const TEAM_BOTH = 4 // used to be (TEAM_NPC == 4)
global const int PROP_IS_VALID_FOR_TURRET_PLACEMENT = SPF_CUSTOM_SCRIPT_3

global struct VortexImpact
{
	entity attacker
	vector origin
	int damageSourceID
	string weaponName
	string impactType
	string refireBehavior
	string absorbSound
	string absorbSound_1p_vs_3p
	asset absorbFX
	asset absorbFX_3p
	array<entity> fxEnt_absorb
	float explosionradius
	int explosion_damage
	string impact_effect_table
	int team = TEAM_UNASSIGNED
}

#if CLIENT
global const FULLMAP_RUI_DRAW_LAYER	= RUI_DRAW_POSTEFFECTS
#endif

// ===============================================================================
// Don't add any constants below here. Add constants that don't reference variables
// that are defined in code and are referenced by preprocessor defines above the
// "don't put anything referenced by preprocessor defines after this block" block
// ===============================================================================
