#if CLIENT
global function ClScoreboard_Init
#endif

#if CLIENT
global function IsScoreboardShown
global function UpdateScoreboardVisibility
global function ShowScoreboard
global function HideScoreboard
global function ToggleScoreboard
global function AddScoreboardShowCallback
global function AddScoreboardHideCallback
global function TPPromptIsActive

global function ClientCodeCallback_ToggleScoreboard
global function ClientToUI_ToggleScoreboard
global function ClientToUI_ShowScoreboardWithTPPrompt
global function ClientToUI_HideScoreboard
#endif


///////////////////////
///////////////////////
//// Private Types ////
///////////////////////
///////////////////////
struct
{
	#if CLIENT
		array<void functionref()> scoreboardShowCallbacks
		array<void functionref()> scoreboardHideCallbacks

		bool wantsToShowScoreboard = false
	#endif
} file

bool s_latestShowWasForTPPrompt = false
bool s_nextShowWantsTPPrompt    = false


/////////////////////////
/////////////////////////
//// Initialiszation ////
/////////////////////////
/////////////////////////
#if CLIENT
void function ClScoreboard_Init()
{
	//RegisterConCommandTriggeredCallback( "+showscores", OnScoreboardButtonPressed )
	//RegisterMenuButtonPressedCallback( BUTTON_BACK, OnScoreboardButtonPressed )

	RegisterSignal( "OnHideScoreboard" )

	//AddCallback_GameStateEnter( eGameState.WinnerDetermined, UpdateScoreboardVisibility )

	clGlobal.isScoreboardShown = false
}
#endif



//////////////////////////
//////////////////////////
//// Global functions ////
//////////////////////////
//////////////////////////
#if CLIENT
bool function IsScoreboardShown()
{
	return clGlobal.isScoreboardShown
}
#endif


#if CLIENT
void function ShowScoreboard()
{
	file.wantsToShowScoreboard = true
	UpdateScoreboardVisibility()
}
#endif


#if CLIENT
void function HideScoreboard()
{
	file.wantsToShowScoreboard = false
	UpdateScoreboardVisibility()
}
#endif


#if CLIENT
void function ToggleScoreboard()
{
	file.wantsToShowScoreboard = !IsScoreboardShown()
	UpdateScoreboardVisibility()
}
#endif


#if CLIENT
void function ClientCodeCallback_ToggleScoreboard()
{
	ToggleScoreboard()
}
#endif


#if CLIENT
void function OnScoreboardButtonPressed( entity localPlayer )
{
	ToggleScoreboard()
}
#endif


#if CLIENT
void function ClientToUI_ToggleScoreboard()
{
	if(GetCurrentPlaylistVarBool( "firingrange_aimtrainerbycolombia", false )) return
	
	if ( IsSurvivalTraining() )
	{
		printf( "%s() - Aborting, because we're in Training.", FUNC_NAME() )
		return
	}

	if ( IsFiringRangeGameMode() )
	{
		printf( "%s() - Showing character select because we're in Firing Range.", FUNC_NAME() )
		RunUIScript( "TryCloseSurvivalInventory", null )
		EmitSoundOnEntity( GetLocalViewPlayer(), "UI_Menu_accept" )
		OpenCharacterSelectNewMenu( true )
		return
	}

	ToggleScoreboard()
}
void function ClientToUI_ShowScoreboardWithTPPrompt()
{
	file.wantsToShowScoreboard = true
	s_nextShowWantsTPPrompt = true
	UpdateScoreboardVisibility()
}
#endif


#if CLIENT
void function ClientToUI_HideScoreboard()
{
	HideScoreboard()
}
#endif

#if CLIENT

bool function TPPromptIsActive()
{
	return (clGlobal.isScoreboardShown && s_latestShowWasForTPPrompt)
}

void function UpdateScoreboardVisibility()
{
	bool wantsTPPrompt = s_nextShowWantsTPPrompt
	s_nextShowWantsTPPrompt = false

	bool shouldShow = file.wantsToShowScoreboard
	if ( GetGameState() >= eGameState.WinnerDetermined )
		shouldShow = false
	else if ( IsViewingSquadSummary() || IsViewingDeathRecap() )
		shouldShow = false
	else if ( GetGameState() < eGameState.Playing && !GetCurrentPlaylistVarBool( "survival_staging_area_enabled", false ) )
		shouldShow = false

	file.wantsToShowScoreboard = shouldShow // Don't treat "wants to show" as a queue. It's more like an argument to this function.

	if ( shouldShow == IsScoreboardShown() )
		return // If we're already in the correct state, do nothing.

	clGlobal.isScoreboardShown = shouldShow

	if ( shouldShow )
	{
		s_latestShowWasForTPPrompt = wantsTPPrompt
		RunUIScript( "TryCloseSurvivalInventory", null )
		RunUIScript( "SetShowingMap", true )

		foreach ( func in file.scoreboardShowCallbacks )
			func()

		// thread clGlobal.showScoreboardFunc() //don't show scoreboard in fullmap it looks bad
	}
	else
	{
		// thread clGlobal.hideScoreboardFunc()

		RunUIScript( "SetShowingMap", false )

		foreach ( func in file.scoreboardHideCallbacks )
			func()
	}
}
#endif


#if CLIENT
void function AddScoreboardShowCallback( void functionref() func )
{
	file.scoreboardShowCallbacks.append( func )
}
#endif


#if CLIENT
void function AddScoreboardHideCallback( void functionref() func )
{
	file.scoreboardHideCallbacks.append( func )
}
#endif
